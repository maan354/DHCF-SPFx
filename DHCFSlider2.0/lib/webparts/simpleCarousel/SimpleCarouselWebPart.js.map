{"version":3,"sources":["webparts/simpleCarousel/SimpleCarouselWebPart.ts"],"names":[],"mappings":"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","file":"webparts/simpleCarousel/SimpleCarouselWebPart.js","sourcesContent":["/**\n * @file\n * Simple Carousel Web Part for SharePoint Framework SPFx\n *\n * Author: Olivier Carpentier\n * Copyright (c) 2016\n */\nimport {\n  BaseClientSideWebPart,\n  IPropertyPaneConfiguration,\n  IWebPartContext,\n  PropertyPaneToggle,\n  PropertyPaneSlider\n} from '@microsoft/sp-webpart-base';\nimport { Version } from '@microsoft/sp-core-library';\n\nimport * as strings from 'simpleCarouselStrings';\nimport { ISimpleCarouselWebPartProps } from './ISimpleCarouselWebPartProps';\nimport { SPPicturesListService } from './SPPicturesListService';\nimport { ISPListItem } from './ISPList';\n\n//Imports property pane custom fields\nimport { PropertyFieldSPListQuery, PropertyFieldSPListQueryOrderBy } from 'sp-client-custom-fields/lib/PropertyFieldSPListQuery';\nimport { PropertyFieldColorPickerMini } from 'sp-client-custom-fields/lib/PropertyFieldColorPickerMini';\nimport { PropertyFieldFontPicker } from 'sp-client-custom-fields/lib/PropertyFieldFontPicker';\nimport { PropertyFieldFontSizePicker } from 'sp-client-custom-fields/lib/PropertyFieldFontSizePicker';\nimport { PropertyFieldAlignPicker } from 'sp-client-custom-fields/lib/PropertyFieldAlignPicker';\nimport { PropertyFieldDimensionPicker } from 'sp-client-custom-fields/lib/PropertyFieldDimensionPicker';\n\n//Loads external JS libs\nimport * as $ from 'jquery';\nrequire('unitegallery');\nrequire('ug-theme-carousel');\n\n//Loads external CSS files\nrequire('../../css/unitegallery/unite-gallery.scss');\n\nexport default class SimpleCarouselWebPart extends BaseClientSideWebPart<ISimpleCarouselWebPartProps> {\n\n  private guid: string;\n\n  /**\n   * @function\n   * Web part contructor.\n   */\n  public constructor(context?: IWebPartContext) {\n    super();\n\n    this.guid = this.getGuid();\n\n    this.onPropertyPaneFieldChanged = this.onPropertyPaneFieldChanged.bind(this);\n  }\n\n  /**\n   * @function\n   * Gets WP data version\n   */\n  protected get dataVersion(): Version {\n    return Version.parse('1.0');\n  }\n\n  /**\n   * @function\n   * Renders HTML code\n   */\n  public render(): void {\n\n    if (this.properties.query == null || this.properties.query == '') {\n      //Display select a list message\n      this.domElement.innerHTML = `\n        <div class=\"ms-MessageBar\">\n          <div class=\"ms-MessageBar-content\">\n            <div class=\"ms-MessageBar-icon\">\n              <i class=\"ms-Icon ms-Icon--Info\"></i>\n            </div>\n            <div class=\"ms-MessageBar-text\">\n              ${strings.ErrorSelectList}\n            </div>\n          </div>\n        </div>\n      `;\n      return;\n    }\n\n    const picturesListService: SPPicturesListService = new SPPicturesListService(this.properties, this.context);\n      //Load the list of pictures from the current lib\n      var queryUrl = this.properties.query;\n      queryUrl += \"$expand=File&$select=Title,Description,id,File,FileSystemObjectType\";\n\n      picturesListService.getPictures(queryUrl)\n        .then((response) => {\n          var responseVal = response.value;\n\n          var outputHtml: string = '';\n          outputHtml += `\n              <div id=\"${this.guid}-gallery\" style=\"display:none;\">\n          `;\n\n          responseVal.map((object:ISPListItem, i:number) => {\n            //Select the best Alt text with title, description or file's name\n            var altText: string = object.Title;\n            if (altText == null || altText == '')\n              altText = object.Description;\n            if (altText == null || altText == '')\n            altText = object.File.Name;\n            //Render the item\n            outputHtml += `\n                <img alt=\"${altText}\" src=\"${object.File.ServerRelativeUrl}\"\n                  data-image=\"${object.File.ServerRelativeUrl}\"\n                  data-description=\"${altText}\">\n            `;\n          });\n          outputHtml += '</div>';\n          this.domElement.innerHTML = outputHtml;\n          this.renderContents();\n      });\n\n  }\n\n  private renderContents(): void {\n\n    var width: number = Number(this.properties.tileDimension.width.replace(\"px\", \"\").replace(\"%\", \"\"));\n    var height: number = Number(this.properties.tileDimension.height.replace(\"px\", \"\").replace(\"%\", \"\"));\n\n      ($ as any)(\"#\" + this.guid + \"-gallery\").unitegallery({\n        gallery_theme: \"carousel\",\n        theme_enable_navigation: this.properties.enableArrows,\n        carousel_autoplay: this.properties.autoplay,\n        tile_enable_border: this.properties.enableBorder,\n        tile_border_width: this.properties.border,\n        tile_border_color: this.properties.borderColor,\n        tile_enable_textpanel: this.properties.textPanelEnable,\n        tile_textpanel_always_on: this.properties.textPanelAlwaysOnTop,\n        tile_textpanel_bg_color: this.properties.textPanelBackgroundColor,\n        tile_textpanel_bg_opacity: this.properties.textPanelOpacity,\n        tile_textpanel_title_color: this.properties.textPanelFontColor,\n        tile_textpanel_title_font_family: this.properties.textPanelFont,\n        tile_textpanel_title_text_align: this.properties.textPanelAlign,\n        carousel_autoplay_timeout: this.properties.speed,\n        carousel_autoplay_pause_onhover: this.properties.pauseOnMouseover,\n        tile_enable_icons: this.properties.enableIcons,\n        tile_width: width,\n        tile_height: height,\n        tile_textpanel_title_font_size: this.properties.textPanelFontSize != null ? this.properties.textPanelFontSize.replace(\"px\", \"\") : ''\n      });\n  }\n\n  /**\n   * @function\n   * Generates a GUID\n   */\n  private getGuid(): string {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  /**\n   * @function\n   * Generates a GUID part\n   */\n  private s4(): string {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n  }\n\n  /**\n   * @function\n   * PropertyPanel settings definition\n   */\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\n    return {\n      pages: [\n        {\n          header: {\n            description: strings.PropertyPageGeneral\n          },\n          displayGroupsAsAccordion: true,\n          groups: [\n            {\n              groupName: strings.BasicGroupName,\n              groupFields: [\n                PropertyFieldSPListQuery('query', {\n                  label: '',\n                  query: this.properties.query,\n                  includeHidden: false,\n                  baseTemplate: 109,\n                  orderBy: PropertyFieldSPListQueryOrderBy.Title,\n                  showOrderBy: true,\n                  showMax: true,\n                  showFilters: true,\n                  max: 100,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  context: this.context,\n                  properties: this.properties,\n                  key: 'simpleCarouselQueryField'\n                })\n              ]\n            },\n            {\n              groupName: strings.GeneralGroupName,\n              groupFields: [\n                PropertyPaneToggle('enableArrows', {\n                  label: strings.EnableArrows\n                }),\n                PropertyPaneToggle('enableIcons', {\n                  label: strings.EnableIconsFieldLabel\n                }),\n                PropertyFieldDimensionPicker('tileDimension', {\n                  label: strings.Dimension,\n                  initialValue: this.properties.tileDimension,\n                  preserveRatio: true,\n                  preserveRatioEnabled: true,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties,\n                  disabled: false,\n                  onGetErrorMessage: null,\n                  deferredValidationTime: 0,\n                  key: 'simpleCarouselDimensionFieldId'\n                })\n              ]\n            },\n            {\n              groupName: strings.EffectsGroupName,\n              groupFields: [\n                PropertyPaneToggle('pauseOnMouseover', {\n                  label: strings.PauseOnMouseover\n                }),\n                PropertyPaneToggle('autoplay', {\n                  label: strings.Autoplay\n                }),\n                PropertyPaneSlider('speed', {\n                  label: strings.Speed,\n                  min: 0,\n                  max: 7000,\n                  step: 100\n                })\n              ]\n            }\n          ]\n        },\n        {\n            header: {\n              description: strings.PropertyPageTextPanel\n            },\n            groups: [\n            {\n              groupName: strings.TextPanelGroupName,\n              groupFields: [\n                PropertyPaneToggle('textPanelEnable', {\n                  label: strings.TextPanelEnableFieldLabel\n                }),\n                PropertyPaneToggle('textPanelAlwaysOnTop', {\n                  label: strings.TextPanelAlwaysOnTopFieldLabel\n                }),\n                PropertyPaneSlider('textPanelOpacity', {\n                  label: strings.TextPanelOpacityFieldLabel,\n                  min: 0,\n                  max: 1,\n                  step: 0.1\n                }),\n                PropertyFieldAlignPicker('textPanelAlign', {\n                  label: strings.TextPanelAlignFieldLabel,\n                  initialValue: this.properties.textPanelAlign,\n                  onPropertyChanged: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties\n                }),\n                PropertyFieldFontPicker('textPanelFont', {\n                  label: strings.TextPanelFontFieldLabel,\n                  initialValue: this.properties.textPanelFont,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties\n                }),\n                PropertyFieldFontSizePicker('textPanelFontSize', {\n                  label: strings.TextPanelFontSizeFieldLabel,\n                  initialValue: this.properties.textPanelFontSize,\n                  usePixels: true,\n                  preview: true,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties\n                }),\n                PropertyFieldColorPickerMini('textPanelFontColor', {\n                  label: strings.TextPanelFontColorFieldLabel,\n                  initialColor: this.properties.textPanelFontColor,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties\n                }),\n                PropertyFieldColorPickerMini('textPanelBackgroundColor', {\n                  label: strings.TextPanelBackgroundColorFieldLabel,\n                  initialColor: this.properties.textPanelBackgroundColor,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties\n                })\n              ]\n            }\n          ]\n        },\n        {\n            header: {\n              description: strings.PropertyPageBorder\n            },\n            groups: [\n            {\n              groupName: strings.BorderGroupName,\n              groupFields: [\n                PropertyPaneToggle('enableBorder', {\n                  label: strings.EnableBorderFieldLabel\n                }),\n                PropertyPaneSlider('border', {\n                  label: strings.BorderFieldLabel,\n                  min: 0,\n                  max: 50,\n                  step: 1\n                }),\n                PropertyFieldColorPickerMini('borderColor', {\n                  label: strings.BorderColorFieldLabel,\n                  initialColor: this.properties.borderColor,\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\n                  render: this.render.bind(this),\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\n                  properties: this.properties\n                })\n              ]\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _bingMap = require('./bingMap');

var _bingMap2 = _interopRequireDefault(_bingMap);

var _googleMap = require('./googleMap');

var _googleMap2 = _interopRequireDefault(_googleMap);

var _yahooMap = require('./yahooMap');

var _yahooMap2 = _interopRequireDefault(_yahooMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var bingService = new _bingMap2.default();
var yahooService = new _yahooMap2.default();
var googleService = new _googleMap2.default();

/**
 * Call the mapLocation service to obtain location details for
 * the address provided
 *
 * @param {object} context
 * @param {object} params
 * @param {function} done
 */

var MapLocationFactory = function () {
    function MapLocationFactory() {
        _classCallCheck(this, MapLocationFactory);
    }

    _createClass(MapLocationFactory, [{
        key: 'getMap',
        value: function getMap(params) {
            var PROVIDER = params.provider;

            if (PROVIDER === 'google') {
                return googleService.getMap(params);
            } else if (PROVIDER === 'bing') {
                return bingService.getMap(params);
            }

            return yahooService.getMap(params);
        }
    }]);

    return MapLocationFactory;
}();

exports.default = MapLocationFactory;
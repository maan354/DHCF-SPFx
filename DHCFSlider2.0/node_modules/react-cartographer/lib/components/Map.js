'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Map;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _mapLocationFactory = require('../lib/mapLocationFactory');

var _mapLocationFactory2 = _interopRequireDefault(_mapLocationFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Factory
var factory = new _mapLocationFactory2.default(); /**
                                                   * Copyright 2015, Yahoo! Inc.
                                                   * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
                                                   */
function Map(props) {
    var location = factory.getMap({
        providerKey: props.providerKey,
        provider: props.provider,
        mapId: props.mapId,
        line1: props.addressLine1,
        line2: [props.city, props.state].join(','),
        line3: props.country,
        longitude: props.longitude,
        latitude: props.latitude,
        height: props.height,
        width: props.width,
        zoom: props.zoom,
        withoutMarker: props.withoutMarker
    });
    var locationText = void 0;
    var locationLink = void 0;
    var style = void 0;

    if (!location.data || !location.data.locationLink) {
        return null;
    }

    locationText = location.data.locationText;
    locationLink = location.data.locationLink;
    style = {
        width: props.width,
        height: props.height
    };

    if (props.useBackgroundImageStyle) {
        style = {
            width: '100%',
            height: props.height,
            background: 'url(' + locationLink + ') no-repeat'
        };
    }

    return _react2.default.createElement(
        'div',
        { style: style, className: 'cartographer-container' },
        !props.useBackgroundImageStyle ? _react2.default.createElement('img', { src: locationLink, alt: locationText, title: locationText }) : null
    );
}

Map.propTypes = {
    providerKey: _propTypes2.default.string.isRequired,
    provider: _propTypes2.default.oneOf(['yahoo', 'google', 'bing']),
    mapId: _propTypes2.default.string.isRequired,
    addressLine1: _propTypes2.default.string,
    city: _propTypes2.default.string,
    state: _propTypes2.default.string,
    country: _propTypes2.default.string,
    longitude: _propTypes2.default.number,
    latitude: _propTypes2.default.number,
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired,
    zoom: _propTypes2.default.number,
    useBackgroundImageStyle: _propTypes2.default.bool,
    withoutMarker: _propTypes2.default.bool
};

Map.defaultProps = {
    provider: 'yahoo',
    mapId: 'map',
    height: 270,
    width: 580,
    zoom: 10,
    useBackgroundImageStyle: false,
    withoutMarker: false
};
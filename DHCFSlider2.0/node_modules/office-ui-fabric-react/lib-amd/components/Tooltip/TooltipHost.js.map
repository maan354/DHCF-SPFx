{"version":3,"sources":["components/Tooltip/TooltipHost.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBA;QAAiC,+BAAmD;QASlF,cAAc;QACd,qBAAY,KAAwB;YAApC,YACE,kBAAM,KAAK,CAAC,SAKb;YAHC,KAAI,CAAC,KAAK,GAAG;gBACX,gBAAgB,EAAE,KAAK;aACxB,CAAC;;QACJ,CAAC;QAED,SAAS;QACF,4BAAM,GAAb;YACM,IAAA,eAAwE,EAAtE,8BAAY,EAAE,oBAAO,EAAE,sBAAQ,EAAE,oCAAe,EAAE,gBAAK,CAAgB;YACvE,IAAA,8CAAgB,CAAgB;YACtC,MAAM,CAAC,CACL,sCACE,SAAS,EAAG,eAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,EAC9C,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IACjC,EAAE,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAC7C,EAAE,aAAa,EAAE,IAAI,CAAC,oBAAoB,EAAE,IACjD,YAAY,EAAG,IAAI,CAAC,oBAAoB,EACxC,YAAY,EAAG,IAAI,CAAC,oBAAoB;gBAEtC,QAAQ;gBACR,gBAAgB,IAAI,CACpB,oBAAC,iBAAO,aACN,KAAK,EAAG,KAAK,EACb,OAAO,EAAG,OAAO,EACjB,aAAa,EAAG,IAAI,CAAC,YAAY,EACjC,eAAe,EAAG,eAAe,EACjC,YAAY,EAAG,kBAAM,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC,IAC5E,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,EAEtC,CACX,CACG,CACP,CAAC;QACJ,CAAC;QAED,eAAe;QAEP,0CAAoB,GAA5B,UAA6B,EAAO;YAClC,IAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,IAAI;aACvB,CAAC,CAAC;QACL,CAAC;QAED,eAAe;QAEP,0CAAoB,GAA5B,UAA6B,EAAO;YAClC,IAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACL,CAAC;QAED,eAAe;QAEP,8CAAwB,GAAhC;YACE,IAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACL,CAAC;QACH,kBAAC;IAAD,CAtEA,AAsEC,CAtEgC,yBAAa;IAE9B,wBAAY,GAAG;QAC3B,KAAK,EAAE,4BAAY,CAAC,MAAM;KAC3B,CAAC;IA6CF;QADC,oBAAQ;2DAKR;IAID;QADC,oBAAQ;2DAKR;IAID;QADC,oBAAQ;+DAKR;IArEU,kCAAW","file":"components/Tooltip/TooltipHost.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  BaseComponent,\r\n  autobind,\r\n  css,\r\n  divProperties,\r\n  getNativeProps,\r\n  assign\r\n} from '../../Utilities';\r\nimport { ITooltipHostProps } from './TooltipHost.Props';\r\nimport { Tooltip } from './Tooltip';\r\nimport { TooltipDelay } from './Tooltip.Props';\r\nimport styles = require('./Tooltip.scss');\r\n\r\nexport interface ITooltipHostState {\r\n  isTooltipVisible?: boolean;\r\n}\r\n\r\nexport class TooltipHost extends BaseComponent<ITooltipHostProps, ITooltipHostState> {\r\n\r\n  public static defaultProps = {\r\n    delay: TooltipDelay.medium\r\n  };\r\n\r\n  // The wrapping div that gets the hover events\r\n  private _tooltipHost: HTMLElement;\r\n\r\n  // Constructor\r\n  constructor(props: ITooltipHostProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isTooltipVisible: false,\r\n    };\r\n  }\r\n\r\n  // Render\r\n  public render() {\r\n    let { calloutProps, content, children, directionalHint, delay } = this.props;\r\n    let { isTooltipVisible } = this.state;\r\n    return (\r\n      <div\r\n        className={ css('ms-TooltipHost', styles.host) }\r\n        ref={ this._resolveRef('_tooltipHost') }\r\n        { ...{ onFocusCapture: this._onTooltipMouseEnter } }\r\n        { ...{ onBlurCapture: this._onTooltipMouseLeave } }\r\n        onMouseEnter={ this._onTooltipMouseEnter }\r\n        onMouseLeave={ this._onTooltipMouseLeave }\r\n      >\r\n        { children }\r\n        { isTooltipVisible && (\r\n          <Tooltip\r\n            delay={ delay }\r\n            content={ content }\r\n            targetElement={ this._tooltipHost }\r\n            directionalHint={ directionalHint }\r\n            calloutProps={ assign(calloutProps, { onDismiss: this._onTooltipCallOutDismiss }) }\r\n            { ...getNativeProps(this.props, divProperties) }\r\n          >\r\n          </Tooltip>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show Tooltip\r\n  @autobind\r\n  private _onTooltipMouseEnter(ev: any) {\r\n    this.setState({\r\n      isTooltipVisible: true\r\n    });\r\n  }\r\n\r\n  // Hide Tooltip\r\n  @autobind\r\n  private _onTooltipMouseLeave(ev: any) {\r\n    this.setState({\r\n      isTooltipVisible: false\r\n    });\r\n  }\r\n\r\n  // Hide Tooltip\r\n  @autobind\r\n  private _onTooltipCallOutDismiss() {\r\n    this.setState({\r\n      isTooltipVisible: false\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
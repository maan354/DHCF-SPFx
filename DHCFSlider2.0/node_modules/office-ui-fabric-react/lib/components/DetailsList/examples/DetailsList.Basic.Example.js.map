{"version":3,"sources":["components/DetailsList/examples/DetailsList.Basic.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,uCAAuC;AACvC,6BAA+B;AAC/B,sCAAsC;AACtC,wDAAuD;AACvD,kEAAiE;AACjE,sEAGgD;AAChD,gFAA+E;AAC/E,+DAA6D;AAE7D,IAAI,MAAa,CAAC;AAElB;IAA6C,2CAAyB;IAGpE;QAAA,YACE,iBAAO,SAaR;QAXC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,GAAG,CAAC,CAAC;QAExC,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/D,KAAI,CAAC,UAAU,GAAG,IAAI,uBAAS,CAAC;YAC9B,kBAAkB,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAI,CAAC,oBAAoB,EAAE,EAAE,CAAC,EAAhE,CAAgE;SAC3F,CAAC,CAAC;QAEH,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,MAAM;YACb,gBAAgB,EAAE,KAAI,CAAC,oBAAoB,EAAE;SAC9C,CAAC;;IACJ,CAAC;IAEM,wCAAM,GAAb;QAAA,iBAsBC;QArBK,IAAA,eAAwC,EAAtC,gBAAK,EAAE,sCAAgB,CAAgB;QAE7C,MAAM,CAAC,CACL;YACE,iCAAO,gBAAgB,CAAQ;YAC/B,oBAAC,qBAAS,IACR,KAAK,EAAC,iBAAiB,EACvB,SAAS,EAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAvC,CAAuC,CAAC,GAAG,MAAM,EAAE,CAAC,EAArG,CAAqG,GACzH;YACF,oBAAC,mCAAgB,IAAC,SAAS,EAAG,IAAI,CAAC,UAAU;gBAC3C,oBAAC,yBAAW,IACV,KAAK,EAAG,KAAK,EACb,MAAM,EAAC,KAAK,EACZ,SAAS,EAAG,IAAI,CAAC,UAAU,EAC3B,8BAA8B,EAAG,IAAI,EACrC,aAAa,EAAG,UAAC,IAAI,IAAK,OAAA,KAAK,CAAC,mBAAiB,IAAI,CAAC,IAAM,CAAC,EAAnC,CAAmC,EAC7D,kBAAkB,EAAG,IAAI,CAAC,mBAAmB,GAC7C,CACe,CACf,CACP,CAAC;IACJ,CAAC;IAEO,qDAAmB,GAA3B,UAA4B,IAAI,EAAE,KAAK,EAAE,MAAM;QAC7C,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,oBAAC,WAAI,6BAAyB,IAAI,IAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAS,CAAC;QAC1E,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAEO,sDAAoB,GAA5B;QACE,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;QAExD,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC;gBACJ,MAAM,CAAC,mBAAmB,CAAC;YAC7B,KAAK,CAAC;gBACJ,MAAM,CAAC,mBAAmB,GAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAS,CAAC,IAAI,CAAC;YAC/E;gBACE,MAAM,CAAI,cAAc,oBAAiB,CAAC;QAC9C,CAAC;IACH,CAAC;IACH,8BAAC;AAAD,CA/DA,AA+DC,CA/D4C,KAAK,CAAC,SAAS,GA+D3D;AA/DY,0DAAuB","file":"components/DetailsList/examples/DetailsList.Basic.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport {\r\n  DetailsList,\r\n  Selection\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { createListItems } from '@uifabric/example-app-base';\r\n\r\nlet _items: any[];\r\n\r\nexport class DetailsListBasicExample extends React.Component<any, any> {\r\n  private _selection: Selection;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    _items = _items || createListItems(500);\r\n\r\n    this._onRenderItemColumn = this._onRenderItemColumn.bind(this);\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this.state = {\r\n      items: _items,\r\n      selectionDetails: this._getSelectionDetails()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>{ selectionDetails }</div>\r\n        <TextField\r\n          label='Filter by name:'\r\n          onChanged={ text => this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items }) }\r\n        />\r\n        <MarqueeSelection selection={ this._selection }>\r\n          <DetailsList\r\n            items={ items }\r\n            setKey='set'\r\n            selection={ this._selection }\r\n            selectionPreservedOnEmptyClick={ true }\r\n            onItemInvoked={ (item) => alert(`Item invoked: ${item.name}`) }\r\n            onRenderItemColumn={ this._onRenderItemColumn }\r\n          />\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderItemColumn(item, index, column) {\r\n    if (column.key === 'name') {\r\n      return <Link data-selection-invoke={ true }>{ item[column.key] }</Link>;\r\n    }\r\n\r\n    return item[column.key];\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    let selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
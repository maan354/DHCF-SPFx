{"version":3,"sources":["components/Callout/examples/Callout.Nested.Example.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,4DAA2D;AAC3D,8DAA6D;AAC7D,oEAAmE;AACnE,iCAA+B;AAQ/B;IAA0C,wCAA+C;IAGvF;QAAA,YACE,iBAAO,SAOR;QALC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAE7C,KAAI,CAAC,KAAK,GAAG;YACX,gBAAgB,EAAE,KAAK;SACxB,CAAC;;IACJ,CAAC;IAEM,qCAAM,GAAb;QAAA,iBAmCC;QAlCO,IAAA,8CAAgB,CAAgB;QAEtC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,mBAAmB;YAChC,6BAAK,SAAS,EAAC,mCAAmC,EAAC,GAAG,EAAG,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,kBAAkB,GAAG,UAAU,EAApC,CAAoC;gBAC3G,oBAAC,eAAM,IAAC,OAAO,EAAG,IAAI,CAAC,UAAU,IAAM,gBAAgB,GAAG,cAAc,GAAG,cAAc,CAAW,CAChG;YACJ,gBAAgB,GAAG,CACnB;gBACE,oBAAC,iBAAO,IACN,SAAS,EAAC,2BAA2B,EACrC,QAAQ,EAAG,CAAC,EACZ,aAAa,EAAG,IAAI,CAAC,kBAAkB,EACvC,SAAS,EAAG,UAAC,EAAO,IAAO,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACjD,eAAe,EAAG,IAAI;oBAEtB,6BAAK,SAAS,EAAC,0BAA0B;wBACvC,2BAAG,SAAS,EAAC,yBAAyB,yBAElC,CACA;oBACN,6BAAK,SAAS,EAAC,yBAAyB;wBACtC,6BAAK,SAAS,EAAC,2BAA2B;4BACxC,2BAAG,SAAS,EAAC,2BAA2B,wHAEpC,CACA,CACF;oBACN,oBAAC,uBAAU,IAAC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAK,CACjC,CACN,CACP,GAAG,CAAC,IAAI,CAAC,CACN,CACP,CAAC;IACJ,CAAC;IAEO,yCAAU,GAAlB,UAAmB,EAAO;QACxB,IAAI,CAAC,QAAQ,CAAC;YACZ,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB;SAC/C,CAAC,CAAC;IACL,CAAC;IACH,2BAAC;AAAD,CAvDA,AAuDC,CAvDyC,KAAK,CAAC,SAAS,GAuDxD;AAvDY,oDAAoB","file":"components/Callout/examples/Callout.Nested.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { Button } from 'office-ui-fabric-react/lib/Button';\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport './CalloutExample.scss';\r\n\r\nimport { items } from '../../CommandBar/examples/data';\r\n\r\nexport interface ICalloutBaiscExampleState {\r\n  isCalloutVisible?: boolean;\r\n}\r\n\r\nexport class CalloutNestedExample extends React.Component<any, ICalloutBaiscExampleState> {\r\n  private _menuButtonElement: HTMLElement;\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n\r\n    this.state = {\r\n      isCalloutVisible: false,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { isCalloutVisible } = this.state;\r\n\r\n    return (\r\n      <div className='ms-CalloutExample'>\r\n        <div className='ms-CalloutBasicExample-buttonArea' ref={ (menuButton) => this._menuButtonElement = menuButton }>\r\n          <Button onClick={ this._onDismiss } >{ isCalloutVisible ? 'Hide callout' : 'Show callout' }</Button>\r\n        </div>\r\n        { isCalloutVisible ? (\r\n          <div>\r\n            <Callout\r\n              className='ms-CalloutExample-callout'\r\n              gapSpace={ 0 }\r\n              targetElement={ this._menuButtonElement }\r\n              onDismiss={ (ev: any) => { this._onDismiss(ev); } }\r\n              setInitialFocus={ true }\r\n            >\r\n              <div className='ms-CalloutExample-header'>\r\n                <p className='ms-CalloutExample-title'>\r\n                  Callout title here\r\n                </p>\r\n              </div>\r\n              <div className='ms-CalloutExample-inner'>\r\n                <div className='ms-CalloutExample-content'>\r\n                  <p className='ms-CalloutExample-subText'>\r\n                    Message body is optional. If help documentation is available, consider adding a link to learn more at the bottom.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <CommandBar items={ this.props.items } />\r\n            </Callout>\r\n          </div>\r\n        ) : (null) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onDismiss(ev: any) {\r\n    this.setState({\r\n      isCalloutVisible: !this.state.isCalloutVisible\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
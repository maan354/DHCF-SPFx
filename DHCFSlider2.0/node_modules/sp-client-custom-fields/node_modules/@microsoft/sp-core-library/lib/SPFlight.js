"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UrlQueryParameterCollection_1 = require("./url/UrlQueryParameterCollection");
var SPFlight = (function () {
    function SPFlight() {
    }
    SPFlight.initialize = function (flights, allowQueryFlights) {
        this._isInitialized = true;
        this._enabledFlightsMap = flights || [];
        if (allowQueryFlights) {
            try {
                var queryParams = new UrlQueryParameterCollection_1.default(window.location.href);
                var debugFlights = queryParams.getValue('debugFlights');
                if (debugFlights) {
                    this._debugFlights = debugFlights.split(',').map(function (value) { return parseInt(value, 10); });
                }
            }
            catch (error) {
                this._debugFlights = [];
                console.log("Error parsing debugFlights query string parameter: " + error);
            }
        }
    };
    SPFlight.isEnabled = function (flight) {
        if (!this._isInitialized && !UNIT_TEST) {
            throw new Error("Flights are not initialized. Flight requested: " + flight);
        }
        if (!flight || flight < 0) {
            return false;
        }
        if (this._debugFlights.indexOf(flight) !== -1) {
            return true;
        }
        var enabledFlightsIndex = flight >> 5;
        if (enabledFlightsIndex < 0 || enabledFlightsIndex >= this._enabledFlightsMap.length) {
            return false;
        }
        var bitMask = 1 << (flight & 31);
        return (this._enabledFlightsMap[enabledFlightsIndex] & bitMask) !== 0;
    };
    return SPFlight;
}());
SPFlight._isInitialized = false;
SPFlight._debugFlights = [];
SPFlight._enabledFlightsMap = [];
exports.default = SPFlight;

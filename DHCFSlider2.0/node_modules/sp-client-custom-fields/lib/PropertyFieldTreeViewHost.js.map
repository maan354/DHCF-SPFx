{"version":3,"sources":["PropertyFieldTreeViewHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldTreeViewHost.js","sourcesContent":["/**\r\n * @file PropertyFieldTreeViewHost.tsx\r\n * Renders the controls for PropertyFieldTreeView component\r\n *\r\n * @copyright 2017 Olivier Carpentier\r\n * Released under MIT licence\r\n */\r\nimport * as React from 'react';\r\nimport { IPropertyFieldTreeViewPropsInternal, ITreeViewNode } from './PropertyFieldTreeView';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\n\r\nrequire('react-ui-tree-draggable/dist/react-ui-tree.css');\r\nvar Tree: any = require('react-ui-tree-draggable/dist/react-ui-tree');\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldTreeViewHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldTreeViewHostProps extends IPropertyFieldTreeViewPropsInternal {\r\n}\r\n\r\nexport interface IPropertyFieldTreeViewState {\r\n  errorMessage: string;\r\n  tree: ITreeViewNode[];\r\n  activeNodes: ITreeViewNode[];\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldTreeView component\r\n */\r\nexport default class PropertyFieldTreeViewHost extends React.Component<IPropertyFieldTreeViewHostProps, IPropertyFieldTreeViewState> {\r\n\r\n  private async: Async;\r\n  private delayedValidate: (value: string[]) => void;\r\n\r\n  /**\r\n   * @function\r\n   * Constructor\r\n   */\r\n  constructor(props: IPropertyFieldTreeViewHostProps) {\r\n    super(props);\r\n\r\n    this.async = new Async(this);\r\n    this.state = ({\r\n      errorMessage: '',\r\n      tree: this.props.tree,\r\n      activeNodes: this.getDefaultActiveNodesFromTree()\r\n    } as IPropertyFieldTreeViewState);\r\n\r\n    this.renderNode = this.renderNode.bind(this);\r\n    this.onClickNode = this.onClickNode.bind(this);\r\n    this.saveSelectedNodes = this.saveSelectedNodes.bind(this);\r\n    this.handleTreeChange = this.handleTreeChange.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  private getDefaultActiveNodesFromTree(): ITreeViewNode[] {\r\n    var res: ITreeViewNode[] = [];\r\n    this.props.tree.map((node: ITreeViewNode) => {\r\n      var subTreeViewNodes: ITreeViewNode[] = this.getDefaultActiveNodes(node);\r\n      subTreeViewNodes.map((subNode: ITreeViewNode) => {\r\n        res.push(subNode);\r\n      });\r\n    });\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the list of activated nodes from the  selectedNodesIDs property\r\n   * @param node\r\n   */\r\n  private getDefaultActiveNodes(node: ITreeViewNode): ITreeViewNode[] {\r\n    var res: ITreeViewNode[] = [];\r\n    if (node === undefined || node == null || this.props.selectedNodesIDs === undefined || this.props.selectedNodesIDs == null)\r\n      return res;\r\n    if (this.props.selectedNodesIDs.indexOf(node.id) != -1)\r\n      res.push(node);\r\n    if (node.children !== undefined) {\r\n      for (var i = 0; i < node.children.length; i++) {\r\n        var subTreeViewNodes: ITreeViewNode[] = this.getDefaultActiveNodes(node.children[i]);\r\n        subTreeViewNodes.map((subNode: ITreeViewNode) => {\r\n          res.push(subNode);\r\n        });\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: string[]): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.selectedNodesIDs, value);\r\n      return;\r\n    }\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || []);\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.selectedNodesIDs, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.selectedNodesIDs, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.selectedNodesIDs, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: string[], newValue: string[]) {\r\n    this.props.properties[this.props.targetProperty] = newValue;\r\n    this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n    if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    if (this.async !== undefined)\r\n      this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the given node position in the active nodes collection\r\n   * @param node\r\n   */\r\n  private getSelectedNodePosition(node: ITreeViewNode): number {\r\n    for (var i = 0; i < this.state.activeNodes.length; i++) {\r\n      if (node === this.state.activeNodes[i])\r\n        return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the given node\r\n   * @param node\r\n   */\r\n  private renderNode(node: ITreeViewNode): JSX.Element {\r\n    var style: any = { padding: '4px 5px', width: '100%', display: 'flex'};\r\n    var selected: boolean = this.getSelectedNodePosition(node) != -1;\r\n    if (selected === true) {\r\n      style.backgroundColor = '#EAEAEA';\r\n    }\r\n    var isFolder: boolean = false;\r\n    if (node.leaf === false || (node.children !== undefined && node.children.length != 0))\r\n      isFolder = true;\r\n    var checkBoxAvailable: boolean = this.props.checkboxEnabled;\r\n    if (this.props.allowFoldersSelections === false && isFolder === true)\r\n      checkBoxAvailable = false;\r\n    var picUrl: string = '';\r\n    if (selected === true && node.selectedPictureUrl !== undefined)\r\n      picUrl = node.selectedPictureUrl;\r\n    else if (node.collapsed !== true && node.expandedPictureUrl !== undefined)\r\n      picUrl = node.expandedPictureUrl;\r\n    else if (node.pictureUrl !== undefined)\r\n      picUrl = node.pictureUrl;\r\n    return (\r\n        <div style={style} onClick={this.onClickNode.bind(null, node)} name={node.id} id={node.id} role=\"menuitem\">\r\n          { checkBoxAvailable ?\r\n               <div style={{marginRight: '5px'}}> <Checkbox\r\n                    checked={selected}\r\n                    disabled={this.props.disabled}\r\n                    label=''\r\n                    onChange={this.onClickNode.bind(null, node)}\r\n                  />\r\n                </div>\r\n            : ''\r\n          }\r\n          <div style={{paddingTop: '7px'}}>\r\n          {\r\n            picUrl !== undefined && picUrl != '' ?\r\n              <img src={picUrl} width=\"18\" height=\"18\" style={{paddingRight: '5px'}} alt={node.label}/>\r\n            : ''\r\n          }\r\n          {node.label}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * clicks on a node\r\n   * @param node\r\n   */\r\n  private onClickNode(node: ITreeViewNode): void {\r\n    if (this.props.allowFoldersSelections === false && (node.children !== undefined && node.children.length != 0))\r\n      return;\r\n    if (this.props.allowMultipleSelections === false) {\r\n      this.state.activeNodes = [node];\r\n    }\r\n    else {\r\n      var index = this.getSelectedNodePosition(node);\r\n      if (index != -1)\r\n        this.state.activeNodes.splice(index, 1);\r\n      else\r\n        this.state.activeNodes.push(node);\r\n    }\r\n    this.setState(this.state);\r\n    this.saveSelectedNodes();\r\n  }\r\n\r\n  /**\r\n   * Saves the selected nodes\r\n   */\r\n  private saveSelectedNodes(): void {\r\n    var res: string[] = [];\r\n    for (var i = 0; i < this.state.activeNodes.length; i++) {\r\n      res.push(this.state.activeNodes[i].id);\r\n    }\r\n    this.delayedValidate(res);\r\n  }\r\n\r\n  /**\r\n   * Handles tree changes\r\n   * @param rootNode\r\n   * @param index\r\n   */\r\n  private handleTreeChange(rootNode: any, index: number): void {\r\n    this.state.tree[index] = rootNode;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the controls\r\n   */\r\n  public render(): JSX.Element {\r\n    //Renders content\r\n    return (\r\n      <div style={{ marginBottom: '8px'}}>\r\n        <Label>{this.props.label}</Label>\r\n        { this.state.tree.map((rootNode: ITreeViewNode, index: number) => {\r\n            return (\r\n              <Tree\r\n                paddingLeft={this.props.nodesPaddingLeft}\r\n                tree={rootNode}\r\n                isNodeCollapsed={false}\r\n                onChange={this.handleTreeChange.bind(null, rootNode, index)}\r\n                renderNode={this.renderNode}\r\n                draggable={false}\r\n                key={'rootNode-' + index}\r\n              />\r\n            );\r\n          })\r\n        }\r\n\r\n        { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n          <div><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n          <span>\r\n            <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n          </span>\r\n          </div>\r\n        : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\src"}
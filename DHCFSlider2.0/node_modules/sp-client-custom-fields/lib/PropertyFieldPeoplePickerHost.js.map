{"version":3,"sources":["PropertyFieldPeoplePickerHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldPeoplePickerHost.js","sourcesContent":["/**\r\n * @file PropertyFieldPeoplePickerHost.tsx\r\n * Renders the controls for PropertyFieldPeoplePicker component\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n *\r\n */\r\nimport * as React from 'react';\r\nimport { IPropertyFieldPeoplePickerPropsInternal } from './PropertyFieldPeoplePicker';\r\nimport { IWebPartContext } from '@microsoft/sp-webpart-base';\r\nimport { SPHttpClient, ISPHttpClientOptions, SPHttpClientResponse } from \"@microsoft/sp-http\";\r\nimport { EnvironmentType, Environment } from '@microsoft/sp-core-library';\r\nimport { IPropertyFieldPeople } from './PropertyFieldPeoplePicker';\r\nimport { NormalPeoplePicker, IBasePickerSuggestionsProps } from 'office-ui-fabric-react/lib/Pickers';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { IPersonaProps, PersonaPresence, PersonaInitialsColor } from 'office-ui-fabric-react/lib/Persona';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nimport * as strings from 'sp-client-custom-fields/strings';\r\n\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldPeoplePickerHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldPeoplePickerHostProps extends IPropertyFieldPeoplePickerPropsInternal {\r\n}\r\n\r\n/**\r\n * @interface\r\n * Defines the state of the component\r\n *\r\n */\r\nexport interface IPeoplePickerState {\r\n  resultsPeople?: Array<IPropertyFieldPeople>;\r\n  resultsPersonas?: Array<IPersonaProps>;\r\n  errorMessage?: string;\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldPeoplePicker component\r\n */\r\nexport default class PropertyFieldPeoplePickerHost extends React.Component<IPropertyFieldPeoplePickerHostProps, IPeoplePickerState> {\r\n\r\n  private searchService: PropertyFieldSearchService;\r\n  private intialPersonas: Array<IPersonaProps> = new Array<IPersonaProps>();\r\n  private resultsPeople: Array<IPropertyFieldPeople> = new Array<IPropertyFieldPeople>();\r\n  private resultsPersonas: Array<IPersonaProps> = new Array<IPersonaProps>();\r\n  private selectedPeople: Array<IPropertyFieldPeople> = new Array<IPropertyFieldPeople>();\r\n  private selectedPersonas: Array<IPersonaProps> = new Array<IPersonaProps>();\r\n  private async: Async;\r\n  private delayedValidate: (value: IPropertyFieldPeople[]) => void;\r\n\r\n  /**\r\n   * @function\r\n   * Constructor\r\n   */\r\n  constructor(props: IPropertyFieldPeoplePickerHostProps) {\r\n    super(props);\r\n\r\n    this.searchService = new PropertyFieldSearchService(props.context);\r\n    this.onSearchFieldChanged = this.onSearchFieldChanged.bind(this);\r\n    this.onItemChanged = this.onItemChanged.bind(this);\r\n\r\n    this.createInitialPersonas();\r\n\r\n    this.state = {\r\n      resultsPeople: this.resultsPeople,\r\n      resultsPersonas: this.resultsPersonas,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the PeoplePicker controls with Office UI  Fabric\r\n   */\r\n  public render(): JSX.Element {\r\n\r\n    var suggestionProps: IBasePickerSuggestionsProps = {\r\n      suggestionsHeaderText: strings.PeoplePickerSuggestedContacts,\r\n      noResultsFoundText: strings.PeoplePickerNoResults,\r\n      loadingText: strings.PeoplePickerLoading,\r\n    };\r\n\r\n    //Renders content\r\n    return (\r\n      <div>\r\n        <Label>{this.props.label}</Label>\r\n        <NormalPeoplePicker\r\n          pickerSuggestionsProps={suggestionProps}\r\n          onResolveSuggestions={this.onSearchFieldChanged}\r\n          onChange={this.onItemChanged}\r\n          defaultSelectedItems={this.intialPersonas}\r\n          />\r\n        { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n              <div style={{paddingBottom: '8px'}}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n              <span>\r\n                <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n              </span>\r\n              </div>\r\n            : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * A search field change occured\r\n   */\r\n  private onSearchFieldChanged(searchText: string, currentSelected: IPersonaProps[]): Promise<IPersonaProps> | IPersonaProps[] {\r\n    if (searchText.length > 2) {\r\n      //Clear the suggestions list\r\n      this.setState({ resultsPeople: this.resultsPeople, resultsPersonas: this.resultsPersonas });\r\n      //Request the search service\r\n      var result = this.searchService.searchPeople(searchText).then((response: IPropertyFieldPeople[]) => {\r\n        this.resultsPeople = [];\r\n        this.resultsPersonas = [];\r\n        //If allowDuplicate == false, so remove duplicates from results\r\n        if (this.props.allowDuplicate === false)\r\n          response = this.removeDuplicates(response);\r\n        response.map((element: IPropertyFieldPeople, index: number) => {\r\n          //Fill the results Array\r\n          this.resultsPeople.push(element);\r\n          //Transform the response in IPersonaProps object\r\n          this.resultsPersonas.push(this.getPersonaFromPeople(element, index));\r\n        });\r\n        //Refresh the component's state\r\n        this.setState({ resultsPeople: this.resultsPeople, resultsPersonas: this.resultsPersonas });\r\n        return this.resultsPersonas;\r\n      });\r\n      return result;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Remove the duplicates if property allowDuplicate equals false\r\n   */\r\n  private removeDuplicates(responsePeople: IPropertyFieldPeople[]): IPropertyFieldPeople[] {\r\n    if (this.selectedPeople == null || this.selectedPeople.length == 0)\r\n      return responsePeople;\r\n    var res: IPropertyFieldPeople[] = [];\r\n    responsePeople.map((element: IPropertyFieldPeople) => {\r\n      var found: boolean = false;\r\n      for (var i: number = 0; i < this.selectedPeople.length; i++) {\r\n        var responseItem: IPropertyFieldPeople = this.selectedPeople[i];\r\n        if (responseItem.login == element.login) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (found === false)\r\n        res.push(element);\r\n    });\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Creates the collection of initial personas from initial IPropertyFieldPeople collection\r\n   */\r\n  private createInitialPersonas(): void {\r\n    if (this.props.initialData == null || typeof (this.props.initialData) != typeof Array<IPropertyFieldPeople>())\r\n      return;\r\n    this.props.initialData.map((element: IPropertyFieldPeople, index: number) => {\r\n      var persona: IPersonaProps = this.getPersonaFromPeople(element, index);\r\n      this.intialPersonas.push(persona);\r\n      this.selectedPersonas.push(persona);\r\n      this.selectedPeople.push(element);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a IPersonaProps object from a IPropertyFieldPeople object\r\n   */\r\n  private getPersonaFromPeople(element: IPropertyFieldPeople, index: number): IPersonaProps {\r\n    return {\r\n      primaryText: element.fullName, secondaryText: element.jobTitle, imageUrl: element.imageUrl,\r\n      imageInitials: element.initials, presence: PersonaPresence.none, initialsColor: this.getRandomInitialsColor(index)\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * @function\r\n   * Refreshes the web part properties\r\n   */\r\n  private refreshWebPartProperties(): void {\r\n    this.delayedValidate(this.selectedPeople);\r\n  }\r\n\r\n   /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: IPropertyFieldPeople[]): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.initialData, value);\r\n      return;\r\n    }\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || []);\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.initialData, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.initialData, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.initialData, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: IPropertyFieldPeople[], newValue: IPropertyFieldPeople[]) {\r\n    if (this.props.onPropertyChange && newValue != null) {\r\n      this.props.properties[this.props.targetProperty] = newValue;\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n      if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Event raises when the user changed people from hte PeoplePicker component\r\n   */\r\n\r\n  private onItemChanged(selectedItems: IPersonaProps[]): void {\r\n    if (selectedItems.length > 0) {\r\n      if (selectedItems.length > this.selectedPersonas.length) {\r\n        var index: number = this.resultsPersonas.indexOf(selectedItems[selectedItems.length - 1]);\r\n        if (index > -1) {\r\n          var people: IPropertyFieldPeople = this.resultsPeople[index];\r\n          this.selectedPeople.push(people);\r\n          this.selectedPersonas.push(this.resultsPersonas[index]);\r\n          this.refreshWebPartProperties();\r\n        }\r\n      } else {\r\n        this.selectedPersonas.map((person, index2) => {\r\n            var selectedItemIndex: number = selectedItems.indexOf(person);\r\n            if (selectedItemIndex === -1) {\r\n              this.selectedPersonas.splice(index2, 1);\r\n              this.selectedPeople.splice(index2, 1);\r\n            }\r\n          });\r\n      }\r\n\r\n    } else {\r\n      this.selectedPersonas.splice(0, this.selectedPersonas.length);\r\n      this.selectedPeople.splice(0, this.selectedPeople.length);\r\n    }\r\n\r\n    this.refreshWebPartProperties();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generate a PersonaInitialsColor from the item position in the collection\r\n   */\r\n  private getRandomInitialsColor(index: number): PersonaInitialsColor {\r\n    var num: number = index % 13;\r\n    switch (num) {\r\n      case 0: return PersonaInitialsColor.blue;\r\n      case 1: return PersonaInitialsColor.darkBlue;\r\n      case 2: return PersonaInitialsColor.teal;\r\n      case 3: return PersonaInitialsColor.lightGreen;\r\n      case 4: return PersonaInitialsColor.green;\r\n      case 5: return PersonaInitialsColor.darkGreen;\r\n      case 6: return PersonaInitialsColor.lightPink;\r\n      case 7: return PersonaInitialsColor.pink;\r\n      case 8: return PersonaInitialsColor.magenta;\r\n      case 9: return PersonaInitialsColor.purple;\r\n      case 10: return PersonaInitialsColor.black;\r\n      case 11: return PersonaInitialsColor.orange;\r\n      case 12: return PersonaInitialsColor.red;\r\n      case 13: return PersonaInitialsColor.darkRed;\r\n      default: return PersonaInitialsColor.blue;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @interface\r\n * Service interface definition\r\n */\r\ninterface IPropertyFieldSearchService {\r\n  /**\r\n   * @function\r\n   * Search People from a query\r\n   */\r\n  searchPeople(query: string): Promise<Array<IPropertyFieldPeople>>;\r\n}\r\n\r\n/**\r\n * @class\r\n * Service implementation to search people in SharePoint\r\n */\r\nclass PropertyFieldSearchService implements IPropertyFieldSearchService {\r\n\r\n  private context: IWebPartContext;\r\n\r\n  /**\r\n   * @function\r\n   * Service constructor\r\n   */\r\n  constructor(pageContext: IWebPartContext) {\r\n    this.context = pageContext;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Search people from the SharePoint People database\r\n   */\r\n  public searchPeople(query: string): Promise<Array<IPropertyFieldPeople>> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.searchPeopleFromMock(query);\r\n    }\r\n    else {\r\n      //If the running env is SharePoint, loads from the peoplepicker web service\r\n      var contextInfoUrl: string = this.context.pageContext.web.absoluteUrl + \"/_api/contextinfo\";\r\n      var userRequestUrl: string = this.context.pageContext.web.absoluteUrl + \"/_api/SP.UI.ApplicationPages.ClientPeoplePickerWebServiceInterface.clientPeoplePickerSearchUser\";\r\n      var httpPostOptions: ISPHttpClientOptions = {\r\n        headers: {\r\n          \"accept\": \"application/json\",\r\n          \"content-type\": \"application/json\"\r\n        }\r\n      };\r\n      return this.context.spHttpClient.post(contextInfoUrl, SPHttpClient.configurations.v1, httpPostOptions).then((response: SPHttpClientResponse) => {\r\n        return response.json().then((jsonResponse: any) => {\r\n          var formDigestValue: string = jsonResponse.FormDigestValue;\r\n          var data = {\r\n            'queryParams': {\r\n              //'__metadata': {\r\n              //    'type': 'SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters'\r\n              //},\r\n              'AllowEmailAddresses': true,\r\n              'AllowMultipleEntities': false,\r\n              'AllUrlZones': false,\r\n              'MaximumEntitySuggestions': 20,\r\n              'PrincipalSource': 15,\r\n              //PrincipalType controls the type of entities that are returned in the results.\r\n              //Choices are All - 15, Distribution List - 2 , Security Groups - 4,\r\n              //SharePoint Groups &ndash; 8, User &ndash; 1. These values can be combined\r\n              'PrincipalType': 1,\r\n              'QueryString': query\r\n              //'Required':false,\r\n              //'SharePointGroupID':null,\r\n              //'UrlZone':null,\r\n              //'UrlZoneSpecified':false,\r\n            }\r\n          };\r\n          httpPostOptions = {\r\n            headers: {\r\n              'accept': 'application/json',\r\n              'content-type': 'application/json',\r\n              \"X-RequestDigest\": formDigestValue\r\n            },\r\n            body: JSON.stringify(data)\r\n          };\r\n          return this.context.spHttpClient.post(userRequestUrl, SPHttpClient.configurations.v1, httpPostOptions).then((searchResponse: SPHttpClientResponse) => {\r\n            return searchResponse.json().then((usersResponse: any) => {\r\n              var res: IPropertyFieldPeople[] = [];\r\n              var values: any = JSON.parse(usersResponse.value);\r\n              values.map(element => {\r\n                var persona: IPropertyFieldPeople = { fullName: element.DisplayText, login: element.Description };\r\n                persona.email = element.EntityData.Email;\r\n                persona.jobTitle = element.EntityData.Title;\r\n                persona.initials = this.getFullNameInitials(persona.fullName);\r\n                persona.imageUrl = this.getUserPhotoUrl(persona.email, this.context.pageContext.web.absoluteUrl);\r\n                res.push(persona);\r\n              });\r\n              return res;\r\n            });\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates Initials from a full name\r\n   */\r\n  private getFullNameInitials(fullName: string): string {\r\n    if (fullName == null)\r\n      return fullName;\r\n    var words: string[] = fullName.split(\" \");\r\n    if (words.length == 0) {\r\n      return \"\";\r\n    }\r\n    else if (words.length == 1) {\r\n      return words[0].charAt(0);\r\n    }\r\n    else {\r\n      return (words[0].charAt(0) + words[1].charAt(0));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the user photo url\r\n   */\r\n  private getUserPhotoUrl(userEmail: string, siteUrl: string): string {\r\n    return `${siteUrl}/_layouts/15/userphoto.aspx?size=S&accountname=${userEmail}`;\r\n  }\r\n\r\n\r\n  /**\r\n   * @function\r\n   * Returns fake people results for the Mock mode\r\n   */\r\n  private searchPeopleFromMock(query: string): Promise<Array<IPropertyFieldPeople>> {\r\n    return PeoplePickerMockHttpClient.searchPeople(this.context.pageContext.web.absoluteUrl).then(() => {\r\n      const results: IPropertyFieldPeople[] = [\r\n        { fullName: \"Olivier Carpentier\", initials: \"OC\", jobTitle: \"Architect\", email: \"olivierc@contoso.com\", login: \"olivierc@contoso.com\" },\r\n        { fullName: \"Katie Jordan\", initials: \"KJ\", jobTitle: \"VIP Marketing\", email: \"katiej@contoso.com\", login: \"katiej@contoso.com\" },\r\n        { fullName: \"Gareth Fort\", initials: \"GF\", jobTitle: \"Sales Lead\", email: \"garethf@contoso.com\", login: \"garethf@contoso.com\" },\r\n        { fullName: \"Sara Davis\", initials: \"SD\", jobTitle: \"Assistant\", email: \"sarad@contoso.com\", login: \"sarad@contoso.com\" },\r\n        { fullName: \"John Doe\", initials: \"JD\", jobTitle: \"Developer\", email: \"johnd@contoso.com\", login: \"johnd@contoso.com\" }\r\n      ];\r\n      return results;\r\n    }) as Promise<Array<IPropertyFieldPeople>>;\r\n  }\r\n}\r\n\r\n/**\r\n * @class\r\n * Defines a http client to request mock data to use the web part with the local workbench\r\n */\r\nclass PeoplePickerMockHttpClient {\r\n\r\n  /**\r\n   * @var\r\n   * Mock SharePoint result sample\r\n   */\r\n  private static _results: IPropertyFieldPeople[] = [];\r\n\r\n  /**\r\n   * @function\r\n   * Mock search People method\r\n   */\r\n  public static searchPeople(restUrl: string, options?: any): Promise<IPropertyFieldPeople[]> {\r\n    return new Promise<IPropertyFieldPeople[]>((resolve) => {\r\n      resolve(PeoplePickerMockHttpClient._results);\r\n    });\r\n  }\r\n\r\n}"],"sourceRoot":"..\\src"}
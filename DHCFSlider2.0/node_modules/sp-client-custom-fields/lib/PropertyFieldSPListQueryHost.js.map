{"version":3,"sources":["PropertyFieldSPListQueryHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldSPListQueryHost.js","sourcesContent":["/**\r\n * @file PropertyFieldSPListQueryHost.tsx\r\n * Renders the controls for PropertyFieldSPListQuery component\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n *\r\n */\r\nimport * as React from 'react';\r\nimport { IWebPartContext} from '@microsoft/sp-webpart-base';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\r\nimport { IPropertyFieldSPListQueryPropsInternal, PropertyFieldSPListQueryOrderBy } from './PropertyFieldSPListQuery';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { CommandButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { Spinner, SpinnerType } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nimport * as strings from 'sp-client-custom-fields/strings';\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldSPListQueryHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldSPListQueryHostProps extends IPropertyFieldSPListQueryPropsInternal {\r\n}\r\n\r\nexport interface IFilter {\r\n  field?: string;\r\n  operator?: string;\r\n  value?: string;\r\n}\r\n\r\n\r\nexport interface IPropertyFieldSPListQueryHostState {\r\n  lists: IDropdownOption[];\r\n  fields: IDropdownOption[];\r\n  arranged: IDropdownOption[];\r\n  selectedList?: string;\r\n  selectedField?: string;\r\n  selectedArrange?: string;\r\n  max?: number;\r\n  operators?: IDropdownOption[];\r\n  filters?: IFilter[];\r\n  errorMessage?: string;\r\n  loadedList: boolean;\r\n  loadedFields: boolean;\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldSPListQuery component\r\n */\r\nexport default class PropertyFieldSPListQueryHost extends React.Component<IPropertyFieldSPListQueryHostProps, IPropertyFieldSPListQueryHostState> {\r\n\r\n  private latestValidateValue: string;\r\n  private async: Async;\r\n  private delayedValidate: (value: string) => void;\r\n\r\n  /**\r\n   * @function\r\n   * Constructor\r\n   */\r\n  constructor(props: IPropertyFieldSPListQueryHostProps) {\r\n    super(props);\r\n    this.onChangedList = this.onChangedList.bind(this);\r\n    this.onChangedField = this.onChangedField.bind(this);\r\n    this.onChangedArranged = this.onChangedArranged.bind(this);\r\n    this.onChangedMax = this.onChangedMax.bind(this);\r\n    this.loadFields = this.loadFields.bind(this);\r\n    this.onClickAddFilter = this.onClickAddFilter.bind(this);\r\n    this.onClickRemoveFilter = this.onClickRemoveFilter.bind(this);\r\n    this.onChangedFilterField = this.onChangedFilterField.bind(this);\r\n    this.onChangedFilterOperator = this.onChangedFilterOperator.bind(this);\r\n    this.onChangedFilterValue = this.onChangedFilterValue.bind(this);\r\n\r\n    this.state = {\r\n      loadedList: false,\r\n      loadedFields: false,\r\n\t\t\tlists: [],\r\n      fields: [],\r\n      arranged: [{key: 'asc', text: 'Asc'}, {key: 'desc', text: 'Desc'}],\r\n      selectedList: '',\r\n      selectedField: '',\r\n      selectedArrange: '',\r\n      operators: [\r\n        {key: 'eq', text: strings.SPListQueryOperatorEq},\r\n         {key: 'ne', text: strings.SPListQueryOperatorNe},\r\n          {key: 'startsWith', text: strings.SPListQueryOperatorStartsWith},\r\n           {key: 'substringof', text: strings.SPListQueryOperatorSubstringof},\r\n            {key: 'lt', text: strings.SPListQueryOperatorLt},\r\n             {key: 'le', text: strings.SPListQueryOperatorLe},\r\n              {key: 'gt', text: strings.SPListQueryOperatorGt},\r\n               {key: 'ge', text: strings.SPListQueryOperatorGe}\r\n      ],\r\n      filters: [],\r\n      max: 20,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.loadDefaultData();\r\n    this.loadLists();\r\n\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  private loadDefaultData(): void {\r\n    if (this.props.query == null || this.props.query == '') {\r\n      this.state.loadedFields = true;\r\n      return;\r\n    }\r\n    var indexOfGuid: number = this.props.query.indexOf(\"lists(guid'\");\r\n    if (indexOfGuid > -1) {\r\n      var listId: string = this.props.query.substr(indexOfGuid);\r\n      listId = listId.replace(\"lists(guid'\", \"\");\r\n      var indexOfEndGuid: number = listId.indexOf(\"')/items\");\r\n      listId = listId.substr(0, indexOfEndGuid);\r\n      this.state.selectedList = listId;\r\n    }\r\n    var indexOfOrderBy: number = this.props.query.indexOf(\"$orderBy=\");\r\n    if (indexOfOrderBy > -1) {\r\n      var orderBy: string = this.props.query.substr(indexOfOrderBy);\r\n      orderBy = orderBy.replace(\"$orderBy=\", \"\");\r\n      var indexOfEndOrderBy: number = orderBy.indexOf(\"%20\");\r\n      var field: string = orderBy.substr(0, indexOfEndOrderBy);\r\n      this.state.selectedField = field;\r\n      var arranged: string = orderBy.substr(indexOfEndOrderBy);\r\n      arranged = arranged.replace(\"%20\", \"\");\r\n      var indexOfEndArranged: number = arranged.indexOf(\"&\");\r\n      arranged = arranged.substr(0, indexOfEndArranged);\r\n      this.state.selectedArrange = arranged;\r\n    }\r\n    var indexOfTop: number = this.props.query.indexOf(\"$top=\");\r\n    if (indexOfTop > -1) {\r\n      var top: string = this.props.query.substr(indexOfTop);\r\n      top = top.replace(\"$top=\", \"\");\r\n      var indexOfEndTop: number = top.indexOf(\"&\");\r\n      top = top.substr(0, indexOfEndTop);\r\n      this.state.max = Number(top);\r\n    }\r\n    var indexOfFilters: number = this.props.query.indexOf(\"$filter=\");\r\n    if (indexOfFilters > -1) {\r\n      var filter: string = this.props.query.substr(indexOfFilters);\r\n      filter = filter.replace(\"$filter=\", \"\");\r\n      var indexOfEndFilter: number = filter.indexOf(\"&\");\r\n      filter = filter.substr(0, indexOfEndFilter);\r\n      if (filter != null && filter != '') {\r\n        var subFilter = filter.split(\"%20and%20\");\r\n        for (var i = 0; i < subFilter.length; i++) {\r\n          var fieldId: string = subFilter[i].substr(0, subFilter[i].indexOf(\"%20\"));\r\n          var operator: string = subFilter[i].substr(subFilter[i].indexOf(\"%20\"));\r\n          operator = operator.substr(3);\r\n          operator = operator.substr(0, operator.indexOf(\"%20\"));\r\n          var value: string = subFilter[i].substr(subFilter[i].indexOf(operator + \"%20\"));\r\n          value = value.replace(operator + \"%20\", \"\");\r\n          value = value.replace(\"'\", \"\").replace(\"'\", \"\").replace(\"'\", \"\");\r\n          if (value == \"undefined\")\r\n            value = '';\r\n          var newObj: IFilter = {};\r\n          newObj.field = fieldId;\r\n          newObj.operator = operator;\r\n          newObj.value = value;\r\n          this.state.filters.push(newObj);\r\n        }\r\n      }\r\n    }\r\n    if (listId != null && listId != '')\r\n      this.loadFields();\r\n    else\r\n      this.state.loadedFields = true;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Loads the list from SharePoint current web site\r\n   */\r\n  private loadLists(): void {\r\n    var listService: SPListPickerService = new SPListPickerService(this.props, this.props.context);\r\n    listService.getLibs().then((response: ISPLists) => {\r\n      this.state.lists = [];\r\n      response.value.map((list: ISPList) => {\r\n        var isSelected: boolean = false;\r\n        if (this.state.selectedList == list.Id) {\r\n          isSelected = true;\r\n        }\r\n        this.state.lists.push({\r\n          key: list.Id,\r\n          text: list.Title,\r\n          isSelected: isSelected\r\n        });\r\n      });\r\n      this.state.loadedList = true;\r\n      this.saveState();\r\n    });\r\n  }\r\n\r\n  private loadFields(): void {\r\n    var listService: SPListPickerService = new SPListPickerService(this.props, this.props.context);\r\n    listService.getFields(this.state.selectedList).then((response: ISPFields) => {\r\n      this.state.fields = [];\r\n      response.value.map((field: ISPField) => {\r\n        var isSelected: boolean = false;\r\n        if (this.state.selectedField == field.StaticName) {\r\n          isSelected = true;\r\n        }\r\n        this.state.fields.push({\r\n          key: field.StaticName,\r\n          text: field.Title,\r\n          isSelected: isSelected\r\n        });\r\n      });\r\n      this.state.loadedFields = true;\r\n      this.saveState();\r\n    });\r\n  }\r\n\r\n  private saveState(): void {\r\n      this.setState(this.state);\r\n  }\r\n\r\n  private saveQuery(): void {\r\n\r\n      var queryUrl: string = this.props.context.pageContext.web.absoluteUrl;\r\n      queryUrl += \"/_api/lists(guid'\";\r\n      queryUrl += this.state.selectedList;\r\n      queryUrl += \"')/items?\";\r\n      if (this.state.selectedField != null && this.state.selectedField != '') {\r\n        queryUrl += \"$orderBy=\";\r\n        queryUrl += this.state.selectedField;\r\n        queryUrl += \"%20\";\r\n        queryUrl += this.state.selectedArrange;\r\n        queryUrl += '&';\r\n      }\r\n      if (this.state.max != null) {\r\n        queryUrl += '$top=';\r\n        queryUrl += this.state.max;\r\n        queryUrl += '&';\r\n      }\r\n      if (this.state.filters != null && this.state.filters.length > 0) {\r\n        queryUrl += '$filter=';\r\n        for (var i = 0; i < this.state.filters.length; i++) {\r\n          if (this.state.filters[i].field != null && this.state.filters[i].operator != null) {\r\n            if (i > 0) {\r\n              queryUrl += \"%20and%20\";\r\n            }\r\n            queryUrl += this.state.filters[i].field;\r\n            queryUrl += \"%20\";\r\n            queryUrl += this.state.filters[i].operator;\r\n            queryUrl += \"%20'\";\r\n            queryUrl += this.state.filters[i].value;\r\n            queryUrl += \"'\";\r\n          }\r\n        }\r\n        queryUrl += '&';\r\n      }\r\n      if (this.delayedValidate !== null && this.delayedValidate !== undefined) {\r\n        this.delayedValidate(queryUrl);\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: string): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.query, value);\r\n      return;\r\n    }\r\n\r\n    if (this.latestValidateValue === value)\r\n      return;\r\n    this.latestValidateValue = value;\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || '');\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.query, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.query, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.query, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: string, newValue: string) {\r\n    if (this.props.onPropertyChange && newValue != null) {\r\n      this.props.properties[this.props.targetProperty] = newValue;\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n      if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Raises when a list has been selected\r\n   */\r\n  private onChangedList(option: IDropdownOption, index?: number): void {\r\n    this.state.selectedList =  option.key as string;\r\n    this.saveQuery();\r\n    this.saveState();\r\n    this.loadFields();\r\n  }\r\n\r\n   private onChangedField(option: IDropdownOption, index?: number): void {\r\n    this.state.selectedField =  option.key as string;\r\n    this.saveQuery();\r\n    this.saveState();\r\n  }\r\n\r\n   private onChangedArranged(option: IDropdownOption, index?: number): void {\r\n    this.state.selectedArrange =  option.key as string;\r\n    this.saveQuery();\r\n    this.saveState();\r\n  }\r\n\r\n  private onChangedMax(newValue?: number): void {\r\n    this.state.max = newValue;\r\n    this.saveQuery();\r\n    this.saveState();\r\n  }\r\n\r\n  private onClickAddFilter(elm?: any): void {\r\n    this.state.filters.push({});\r\n    this.saveState();\r\n    this.saveQuery();\r\n  }\r\n\r\n  private onClickRemoveFilter(index: number): void {\r\n    if (index > -1) {\r\n      this.state.filters.splice(index, 1);\r\n      this.saveState();\r\n      this.saveQuery();\r\n    }\r\n  }\r\n\r\n  private onChangedFilterField(option: IDropdownOption, index?: number, selectedIndex?: number): void {\r\n    this.state.filters[selectedIndex].field = option.key as string;\r\n    this.saveState();\r\n    this.saveQuery();\r\n  }\r\n\r\n  private onChangedFilterOperator(option: IDropdownOption, index?: number, selectedIndex?: number): void {\r\n    this.state.filters[selectedIndex].operator = option.key as string;\r\n    this.saveState();\r\n    this.saveQuery();\r\n  }\r\n\r\n  private onChangedFilterValue(value?: string, index?: number): void {\r\n    this.state.filters[index].value = value;\r\n    this.saveState();\r\n    this.saveQuery();\r\n  }\r\n\r\n\r\n  /**\r\n   * @function\r\n   * Renders the controls\r\n   */\r\n  public render(): JSX.Element {\r\n\r\n    if (this.state.loadedList === false || this.state.loadedFields === false) {\r\n      return (\r\n        <div>\r\n          <Label>{this.props.label}</Label>\r\n          <Spinner type={ SpinnerType.normal } />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    //Renders content\r\n    return (\r\n      <div>\r\n        <Label>{this.props.label}</Label>\r\n        <Dropdown\r\n          label={strings.SPListQueryList}\r\n          onChanged={this.onChangedList}\r\n          options={this.state.lists}\r\n          selectedKey={this.state.selectedList}\r\n          disabled={this.props.disabled}\r\n        />\r\n\r\n        {this.props.showOrderBy != false ?\r\n          <div>\r\n            <Dropdown\r\n              label={strings.SPListQueryOrderBy}\r\n              options={this.state.fields}\r\n              selectedKey={this.state.selectedField}\r\n              onChanged={this.onChangedField}\r\n              disabled={this.props.disabled === false && this.state.selectedList != null && this.state.selectedList != '' ? false : true }\r\n            />\r\n            <Dropdown\r\n              label={strings.SPListQueryArranged}\r\n              options={this.state.arranged}\r\n              selectedKey={this.state.selectedArrange}\r\n              onChanged={this.onChangedArranged}\r\n              disabled={this.props.disabled === false && this.state.selectedList != null && this.state.selectedList != '' ? false : true }\r\n            />\r\n           </div>\r\n          : ''}\r\n\r\n        {this.props.showMax != false ?\r\n          <Slider label={strings.SPListQueryMax}\r\n            min={0}\r\n            max={this.props.max == null ? 500 : this.props.max}\r\n            defaultValue={this.state.max}\r\n            onChange={this.onChangedMax}\r\n            disabled={this.props.disabled === false && this.state.selectedList != null && this.state.selectedList != '' ? false : true }\r\n          />\r\n          : ''}\r\n\r\n        {this.state.filters.map((value: IFilter, index: number) => {\r\n          return (\r\n            <div>\r\n              <Label>Filter</Label>\r\n              <Dropdown\r\n                label=''\r\n                disabled={this.props.disabled}\r\n                options={this.state.fields}\r\n                selectedKey={value.field}\r\n                onChanged={(option: IDropdownOption, selectIndex?: number) => this.onChangedFilterField(option, selectIndex, index)}\r\n              />\r\n              <Dropdown\r\n                label=''\r\n                disabled={this.props.disabled}\r\n                options={this.state.operators}\r\n                selectedKey={value.operator}\r\n                onChanged={(option: IDropdownOption, selectIndex?: number) => this.onChangedFilterOperator(option, selectIndex, index)}\r\n              />\r\n              <TextField disabled={this.props.disabled} defaultValue={value.value} onChanged={(value2: string) => this.onChangedFilterValue(value2, index)} />\r\n              <CommandButton disabled={this.props.disabled} onClick={() => this.onClickRemoveFilter(index)} iconProps={ { iconName: 'Delete' } }>\r\n                {strings.SPListQueryRemove}\r\n              </CommandButton>\r\n            </div>\r\n          );\r\n        })\r\n        }\r\n\r\n        {this.props.showFilters != false ?\r\n          <CommandButton onClick={this.onClickAddFilter}\r\n          disabled={this.props.disabled === false && this.state.selectedList != null && this.state.selectedList != '' ? false : true } iconProps={ { iconName: 'Add' } }>\r\n          {strings.SPListQueryAdd}\r\n          </CommandButton>\r\n          : ''}\r\n\r\n        { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n              <div style={{paddingBottom: '8px'}}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n              <span>\r\n                <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n              </span>\r\n              </div>\r\n            : ''}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @interface\r\n * Defines a collection of SharePoint lists\r\n */\r\ninterface ISPLists {\r\n  value: ISPList[];\r\n}\r\n\r\n/**\r\n * @interface\r\n * Defines a SharePoint list\r\n */\r\ninterface ISPList {\r\n  Title: string;\r\n  Id: string;\r\n  BaseTemplate: string;\r\n}\r\n\r\ninterface ISPField {\r\n  Title: string;\r\n  StaticName: string;\r\n}\r\n\r\ninterface ISPFields {\r\n  value: ISPField[];\r\n}\r\n\r\n/**\r\n * @class\r\n * Service implementation to get list & list items from current SharePoint site\r\n */\r\nclass SPListPickerService {\r\n\r\n  private context: IWebPartContext;\r\n  private props: IPropertyFieldSPListQueryHostProps;\r\n\r\n  /**\r\n   * @function\r\n   * Service constructor\r\n   */\r\n  constructor(_props: IPropertyFieldSPListQueryHostProps, pageContext: IWebPartContext){\r\n      this.props = _props;\r\n      this.context = pageContext;\r\n  }\r\n\r\n  public getFields(listId: string): Promise<ISPFields> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getFieldsFromMock();\r\n    }\r\n    else {\r\n      var queryUrl: string = this.context.pageContext.web.absoluteUrl;\r\n      queryUrl += \"/_api/lists(guid'\";\r\n      queryUrl += listId;\r\n      queryUrl += \"')/Fields?$select=Title,StaticName&$orderBy=Title&$filter=Hidden%20eq%20false\";\r\n      return this.context.spHttpClient.get(queryUrl, SPHttpClient.configurations.v1).then((response: SPHttpClientResponse) => {\r\n          return response.json();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the collection of libs in the current SharePoint site\r\n   */\r\n  public getLibs(): Promise<ISPLists> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getLibsFromMock();\r\n    }\r\n    else {\r\n      //If the running environment is SharePoint, request the lists REST service\r\n      var queryUrl: string = this.context.pageContext.web.absoluteUrl;\r\n      queryUrl += \"/_api/lists?$select=Title,id,BaseTemplate\";\r\n      if (this.props.orderBy != null) {\r\n        queryUrl += \"&$orderby=\";\r\n        if (this.props.orderBy == PropertyFieldSPListQueryOrderBy.Id)\r\n          queryUrl += \"Id\";\r\n        else if (this.props.orderBy == PropertyFieldSPListQueryOrderBy.Title)\r\n          queryUrl += \"Title\";\r\n      }\r\n      if (this.props.baseTemplate != null && this.props.baseTemplate) {\r\n        queryUrl += \"&$filter=BaseTemplate%20eq%20\";\r\n        queryUrl += this.props.baseTemplate;\r\n        if (this.props.includeHidden === false) {\r\n          queryUrl += \"%20and%20Hidden%20eq%20false\";\r\n        }\r\n      }\r\n      else {\r\n        if (this.props.includeHidden === false) {\r\n          queryUrl += \"&$filter=Hidden%20eq%20false\";\r\n        }\r\n      }\r\n      return this.context.spHttpClient.get(queryUrl, SPHttpClient.configurations.v1).then((response: SPHttpClientResponse) => {\r\n          return response.json();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Returns 3 fake SharePoint lists for the Mock mode\r\n   */\r\n  private getLibsFromMock(): Promise<ISPLists> {\r\n    return SPListPickerMockHttpClient.getLists(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const listData: ISPLists = {\r\n              value:\r\n              [\r\n                  { Title: 'Mock List One', Id: '6770c83b-29e8-494b-87b6-468a2066bcc6', BaseTemplate: '109' },\r\n                  { Title: 'Mock List Two', Id: '2ece98f2-cc5e-48ff-8145-badf5009754c', BaseTemplate: '109' },\r\n                  { Title: 'Mock List Three', Id: 'bd5dbd33-0e8d-4e12-b289-b276e5ef79c2', BaseTemplate: '109' }\r\n              ]\r\n          };\r\n          return listData;\r\n      }) as Promise<ISPLists>;\r\n  }\r\n\r\n   private getFieldsFromMock(): Promise<ISPFields> {\r\n    return SPListPickerMockHttpClient.getFields(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const listData: ISPFields = {\r\n              value:\r\n              [\r\n                  { Title: 'ID', StaticName: 'ID'},\r\n                  { Title: 'Title', StaticName: 'Title'},\r\n                  { Title: 'Created', StaticName: 'Created'},\r\n                  { Title: 'Modified', StaticName: 'Modified'}\r\n              ]\r\n          };\r\n          return listData;\r\n      }) as Promise<ISPFields>;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @class\r\n * Defines a http client to request mock data to use the web part with the local workbench\r\n */\r\nclass SPListPickerMockHttpClient {\r\n\r\n    /**\r\n     * @var\r\n     * Mock SharePoint result sample\r\n     */\r\n    private static _results: ISPLists = { value: []};\r\n    private static _resultsF: ISPFields = { value: []};\r\n\r\n    /**\r\n     * @function\r\n     * Mock search People method\r\n     */\r\n    public static getLists(restUrl: string, options?: any): Promise<ISPLists> {\r\n      return new Promise<ISPLists>((resolve) => {\r\n            resolve(SPListPickerMockHttpClient._results);\r\n        });\r\n    }\r\n\r\n    public static getFields(restUrl: string, options?: any): Promise<ISPFields> {\r\n      return new Promise<ISPFields>((resolve) => {\r\n            resolve(SPListPickerMockHttpClient._resultsF);\r\n        });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"..\\src"}
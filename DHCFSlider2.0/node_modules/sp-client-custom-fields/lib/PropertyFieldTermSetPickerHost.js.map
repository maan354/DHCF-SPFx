{"version":3,"sources":["PropertyFieldTermSetPickerHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldTermSetPickerHost.js","sourcesContent":["/**\r\n * @file PropertyFieldTermSetPickerHost.tsx\r\n * Renders the controls for PropertyFieldTermSetPicker component\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n *\r\n */\r\nimport * as React from 'react';\r\nimport { IWebPartContext} from '@microsoft/sp-webpart-base';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { Spinner, SpinnerType } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport {\r\n  IPropertyFieldTermSetPickerPropsInternal,\r\n  ISPTermStores, ISPTermStore,\r\n  ISPTermGroups, ISPTermGroup,\r\n  ISPTermSets, ISPTermSet,\r\n  ISPTermObject\r\n} from './PropertyFieldTermSetPicker';\r\nimport { SPHttpClient, SPHttpClientResponse, ISPHttpClientOptions } from '@microsoft/sp-http';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\n\r\nrequire('react-ui-tree-draggable/dist/react-ui-tree.css');\r\nvar Tree: any = require('react-ui-tree-draggable/dist/react-ui-tree');\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldTermSetPickerHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldTermSetPickerHostProps extends IPropertyFieldTermSetPickerPropsInternal {\r\n}\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldTermSetPickerHost state interface\r\n *\r\n */\r\nexport interface IPropertyFieldFontPickerHostState {\r\n  termStores: ISPTermStores;\r\n  errorMessage?: string;\r\n  openPanel: boolean;\r\n  loaded: boolean;\r\n  activeNodes: ISPTermSets;\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldTermSetPicker component\r\n */\r\nexport default class PropertyFieldTermSetPickerHost extends React.Component<IPropertyFieldTermSetPickerHostProps, IPropertyFieldFontPickerHostState> {\r\n\r\n  private async: Async;\r\n  private delayedValidate: (value: ISPTermSets) => void;\r\n\r\n  /**\r\n   * @function\r\n   * Constructor\r\n   */\r\n  constructor(props: IPropertyFieldTermSetPickerHostProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeNodes: this.props.initialValues !== undefined ? this.props.initialValues : [],\r\n      termStores: [],\r\n      loaded: false,\r\n      openPanel: false,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.onOpenPanel = this.onOpenPanel.bind(this);\r\n    this.onClosePanel = this.onClosePanel.bind(this);\r\n    this.renderNode = this.renderNode.bind(this);\r\n    this.onClickNode = this.onClickNode.bind(this);\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Loads the list from SharePoint current web site\r\n   */\r\n  private loadTermStores(): void {\r\n    var termsService: SPTermStorePickerService = new SPTermStorePickerService(this.props, this.props.context);\r\n    termsService.getTermStores().then((response: ISPTermStores) => {\r\n      this.state.termStores = response;\r\n      this.state.loaded = true;\r\n      this.setState(this.state);\r\n      response.map((termStore: ISPTermStore, index: number) => {\r\n        termsService.getTermStoresGroups(termStore).then((groupsResponse: ISPTermGroups) => {\r\n          termStore.children = groupsResponse;\r\n          this.setState(this.state);\r\n          groupsResponse.map((group: ISPTermGroup) => {\r\n            termsService.getTermSets(termStore, group).then((termSetsResponse: ISPTermSets) => {\r\n              group.children = termSetsResponse;\r\n              this.setState(this.state);\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: ISPTermSets): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.initialValues, value);\r\n      return;\r\n    }\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || []);\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.initialValues, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.initialValues, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.initialValues, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: ISPTermSets, newValue: ISPTermSets) {\r\n    if (this.props.onPropertyChange && newValue != null) {\r\n      this.props.properties[this.props.targetProperty] = newValue;\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n      if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Open the right Panel\r\n   */\r\n  private onOpenPanel(): void {\r\n    if (this.props.disabled === true)\r\n      return;\r\n    this.state.openPanel = true;\r\n    this.state.loaded = false;\r\n    this.loadTermStores();\r\n    this.setState(this.state);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Close the panel\r\n   */\r\n  private onClosePanel(): void {\r\n    this.state.openPanel = false;\r\n    this.state.loaded = false;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  /**\r\n   * clicks on a node\r\n   * @param node\r\n   */\r\n  private onClickNode(node: ISPTermSet): void {\r\n    if (node.children !== undefined && node.children.length != 0)\r\n      return;\r\n    if (this.props.allowMultipleSelections === false) {\r\n      this.state.activeNodes = [node];\r\n    }\r\n    else {\r\n      var index = this.getSelectedNodePosition(node);\r\n      if (index != -1)\r\n        this.state.activeNodes.splice(index, 1);\r\n      else\r\n        this.state.activeNodes.push(node);\r\n    }\r\n    this.setState(this.state);\r\n    this.delayedValidate(this.state.activeNodes);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the given node position in the active nodes collection\r\n   * @param node\r\n   */\r\n  private getSelectedNodePosition(node: ISPTermSet): number {\r\n    for (var i = 0; i < this.state.activeNodes.length; i++) {\r\n      if (node.Guid === this.state.activeNodes[i].Guid)\r\n        return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    if (this.async !== undefined)\r\n      this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the given node\r\n   * @param node\r\n   */\r\n  private renderNode(node: ISPTermObject): JSX.Element {\r\n    var style: any = { padding: '4px 5px', width: '100%', display: 'flex'};\r\n    var selected: boolean = false;\r\n    var isFolder: boolean = false;\r\n    if (node.leaf === false || (node.children !== undefined && node.children.length != 0))\r\n      isFolder = true;\r\n    var checkBoxAvailable: boolean = true;\r\n    if (isFolder === true)\r\n      checkBoxAvailable = false;\r\n    var picUrl: string = '';\r\n    if (node.type === \"TermStore\") {\r\n      picUrl = this.props.context.pageContext.web.absoluteUrl + '/_layouts/15/Images/EMMRoot.png';\r\n    }\r\n    else if (node.type === \"TermGroup\") {\r\n      picUrl = this.props.context.pageContext.web.absoluteUrl + '/_layouts/15/Images/EMMGroup.png';\r\n    }\r\n    else if (node.type === \"TermSet\") {\r\n      picUrl = this.props.context.pageContext.web.absoluteUrl + '/_layouts/15/Images/EMMTermSet.png';\r\n      selected = this.getSelectedNodePosition(node as ISPTermSet) != -1;\r\n      if (selected === true) {\r\n        style.backgroundColor = '#EAEAEA';\r\n      }\r\n    }\r\n    return (\r\n        <div style={style} onClick={this.onClickNode.bind(null, node)} name={node.Guid} id={node.Guid} role=\"menuitem\">\r\n          { checkBoxAvailable ?\r\n              <div style={{marginRight: '5px'}}>\r\n                <Checkbox\r\n                    checked={selected}\r\n                    disabled={this.props.disabled}\r\n                    label=''\r\n                    onChange={this.onClickNode.bind(null, node)}\r\n                  />\r\n              </div>\r\n            : ''\r\n          }\r\n          <div style={{paddingTop: '7px'}}>\r\n          {\r\n            picUrl !== undefined && picUrl != '' ?\r\n              <img src={picUrl} width=\"18\" height=\"18\" style={{paddingRight: '5px'}} alt={node.Name}/>\r\n            : ''\r\n          }\r\n          { node.type === \"TermStore\" ? <strong>{node.Name}</strong> : node.Name }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the SPListpicker controls with Office UI  Fabric\r\n   */\r\n  public render(): JSX.Element {\r\n    var termSetsString: string = '';\r\n    if (this.state.activeNodes !== undefined) {\r\n      this.state.activeNodes.map((termSet: ISPTermSet, index: number) => {\r\n        if (index > 0)\r\n          termSetsString += '; ';\r\n        termSetsString += termSet.Name;\r\n      });\r\n    }\r\n    //Renders content\r\n    return (\r\n      <div>\r\n        <Label>{this.props.label}</Label>\r\n        <table style={{width: '100%', borderSpacing: 0}}>\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"*\">\r\n                <TextField\r\n                  disabled={this.props.disabled}\r\n                  style={{width:'100%'}}\r\n                  onChanged={null}\r\n                  readOnly={true}\r\n                  value={termSetsString}\r\n                />\r\n              </td>\r\n              <td width=\"32\">\r\n                <IconButton disabled={this.props.disabled} iconProps={ { iconName: 'Tag' } } onClick={this.onOpenPanel} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n              <div style={{paddingBottom: '8px'}}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n              <span>\r\n                <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n              </span>\r\n              </div>\r\n            : ''}\r\n\r\n        <Panel\r\n          isOpen={this.state.openPanel} hasCloseButton={true} onDismiss={this.onClosePanel}\r\n          isLightDismiss={true} type={PanelType.medium}\r\n          headerText={this.props.panelTitle}>\r\n\r\n          { this.state.loaded === false ? <Spinner type={ SpinnerType.normal } /> : '' }\r\n          { this.state.loaded === true ? this.state.termStores.map((rootNode: ISPTermStore, index: number) => {\r\n              return (\r\n                <Tree\r\n                  paddingLeft={15}\r\n                  tree={rootNode}\r\n                  isNodeCollapsed={false}\r\n                  renderNode={this.renderNode}\r\n                  draggable={false}\r\n                  key={'termRootNode-' + index}\r\n                />\r\n              );\r\n            })\r\n            : ''\r\n          }\r\n        </Panel>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @class\r\n * Service implementation to manage term stores in SharePoint\r\n */\r\nclass SPTermStorePickerService {\r\n\r\n  private context: IWebPartContext;\r\n  private props: IPropertyFieldTermSetPickerHostProps;\r\n  private taxonomySession: string;\r\n  private formDigest: string;\r\n\r\n  /**\r\n   * @function\r\n   * Service constructor\r\n   */\r\n  constructor(_props: IPropertyFieldTermSetPickerHostProps, pageContext: IWebPartContext){\r\n      this.props = _props;\r\n      this.context = pageContext;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the collection of term stores in the current SharePoint env\r\n   */\r\n  public getTermStores(): Promise<ISPTermStores> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getTermStoresFromMock();\r\n    }\r\n    else {\r\n      //First gets the FORM DIGEST VALUE\r\n      var contextInfoUrl: string = this.context.pageContext.web.absoluteUrl + \"/_api/contextinfo\";\r\n      var httpPostOptions: ISPHttpClientOptions = {\r\n        headers: {\r\n          \"accept\": \"application/json\",\r\n          \"content-type\": \"application/json\"\r\n        }\r\n      };\r\n      return this.context.spHttpClient.post(contextInfoUrl, SPHttpClient.configurations.v1, httpPostOptions).then((response: SPHttpClientResponse) => {\r\n        return response.json().then((jsonResponse: any) => {\r\n          this.formDigest = jsonResponse.FormDigestValue;\r\n\r\n          //Build the Client Service Request\r\n          var clientServiceUrl = this.context.pageContext.web.absoluteUrl + '/_vti_bin/client.svc/ProcessQuery';\r\n          var data = '<Request xmlns=\"http://schemas.microsoft.com/sharepoint/clientquery/2009\" SchemaVersion=\"15.0.0.0\" LibraryVersion=\"16.0.0.0\" ApplicationName=\"Javascript Library\"><Actions><ObjectPath Id=\"1\" ObjectPathId=\"0\" /><ObjectIdentityQuery Id=\"2\" ObjectPathId=\"0\" /><Query Id=\"3\" ObjectPathId=\"0\"><Query SelectAllProperties=\"true\"><Properties /></Query></Query><ObjectPath Id=\"5\" ObjectPathId=\"4\" /><Query Id=\"6\" ObjectPathId=\"4\"><Query SelectAllProperties=\"true\"><Properties /></Query><ChildItemQuery SelectAllProperties=\"true\"><Properties /></ChildItemQuery></Query></Actions><ObjectPaths><StaticMethod Id=\"0\" Name=\"GetTaxonomySession\" TypeId=\"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\" /><Property Id=\"4\" ParentId=\"0\" Name=\"TermStores\" /></ObjectPaths></Request>';\r\n          httpPostOptions = {\r\n            headers: {\r\n              'accept': 'application/json',\r\n              'content-type': 'application/json',\r\n              \"X-RequestDigest\": this.formDigest\r\n            },\r\n            body: data\r\n          };\r\n          return this.context.spHttpClient.post(clientServiceUrl, SPHttpClient.configurations.v1, httpPostOptions).then((serviceResponse: SPHttpClientResponse) => {\r\n            return serviceResponse.json().then((serviceJSONResponse: any) => {\r\n\r\n              //Construct results\r\n              var res: ISPTermStores = [];\r\n              serviceJSONResponse.map((child: any) => {\r\n                if (child != null && child['_ObjectType_'] !== undefined) {\r\n                  var objType = child['_ObjectType_'];\r\n                  if (objType === \"SP.Taxonomy.TaxonomySession\") {\r\n                    this.taxonomySession = child['_ObjectIdentity_'];\r\n                  }\r\n                  else if (objType === \"SP.Taxonomy.TermStoreCollection\") {\r\n                    var childTermStores = child['_Child_Items_'];\r\n                    childTermStores.map((childTerm: any) => {\r\n                      var newTermStore: ISPTermStore = {\r\n                        Name: childTerm['Name'] !== undefined ? childTerm['Name'] : '',\r\n                        Guid: childTerm['Id'] !== undefined ? this.cleanGuid(childTerm['Id']): '',\r\n                        Identity: childTerm['_ObjectIdentity_'] !== undefined ? childTerm['_ObjectIdentity_'] : '',\r\n                        IsOnline: childTerm['IsOnline'] !== undefined ? childTerm['IsOnline'] : '',\r\n                        WorkingLanguage: childTerm['WorkingLanguage'] !== undefined ? childTerm['WorkingLanguage'] : '',\r\n                        DefaultLanguage: childTerm['DefaultLanguage'] !== undefined ? childTerm['DefaultLanguage'] : '',\r\n                        Languages: childTerm['Languages'] !== undefined ? childTerm['Languages'] : [],\r\n                        leaf: false,\r\n                        type: 'TermStore'\r\n                      };\r\n                      if (!(this.props.excludeOfflineTermStores === true && newTermStore.IsOnline === false))\r\n                        res.push(newTermStore);\r\n                    });\r\n                  }\r\n                }\r\n              });\r\n              return res;\r\n\r\n            });\r\n          });\r\n\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public getTermStoresGroups(termStore: ISPTermStore): Promise<ISPTermGroups> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getTermStoresGroupsFromMock(termStore.Identity);\r\n    }\r\n    else {\r\n      //Build the Client Service Request\r\n      var clientServiceUrl = this.context.pageContext.web.absoluteUrl + '/_vti_bin/client.svc/ProcessQuery';\r\n      var data = '<Request xmlns=\"http://schemas.microsoft.com/sharepoint/clientquery/2009\" SchemaVersion=\"15.0.0.0\" LibraryVersion=\"16.0.0.0\" ApplicationName=\"Javascript Library\"><Actions><ObjectPath Id=\"16\" ObjectPathId=\"15\" /><Query Id=\"17\" ObjectPathId=\"15\"><Query SelectAllProperties=\"true\"><Properties /></Query><ChildItemQuery SelectAllProperties=\"true\"><Properties /></ChildItemQuery></Query></Actions><ObjectPaths><Property Id=\"15\" ParentId=\"5\" Name=\"Groups\" /><Identity Id=\"5\" Name=\"' + termStore.Identity + '\" /></ObjectPaths></Request>';\r\n      var httpPostOptions = {\r\n        headers: {\r\n              'accept': 'application/json',\r\n              'content-type': 'application/json',\r\n              \"X-RequestDigest\": this.formDigest\r\n        },\r\n        body: data\r\n      };\r\n      return this.context.spHttpClient.post(clientServiceUrl, SPHttpClient.configurations.v1, httpPostOptions).then((serviceResponse: SPHttpClientResponse) => {\r\n        return serviceResponse.json().then((serviceJSONResponse: any) => {\r\n          var res: ISPTermGroups = [];\r\n          serviceJSONResponse.map((child: any) => {\r\n            var objType = child['_ObjectType_'];\r\n            if (objType === \"SP.Taxonomy.TermGroupCollection\") {\r\n              if (child['_Child_Items_'] !== undefined) {\r\n                child['_Child_Items_'].map((childGroup: any) => {\r\n                  var objGroup: ISPTermGroup = {\r\n                    Name: childGroup['Name'] !== undefined ? childGroup['Name'] : '',\r\n                    Guid: childGroup['Id'] !== undefined ? this.cleanGuid(childGroup['Id']) : '',\r\n                    Identity: childGroup['_ObjectIdentity_'] !== undefined ? childGroup['_ObjectIdentity_'] : '',\r\n                    IsSiteCollectionGroup: childGroup['IsSiteCollectionGroup'] !== undefined ? childGroup['IsSiteCollectionGroup'] : '',\r\n                    IsSystemGroup: childGroup['IsSystemGroup'] !== undefined ? childGroup['IsSystemGroup'] : '',\r\n                    CreatedDate: childGroup['CreatedDate'] !== undefined ? childGroup['CreatedDate'] : '',\r\n                    LastModifiedDate: childGroup['LastModifiedDate'] !== undefined ? childGroup['LastModifiedDate'] : '',\r\n                    leaf: false,\r\n                    type: 'TermGroup'\r\n                  };\r\n                  if (this.props.excludeSystemGroup === true) {\r\n                    if (objGroup.IsSystemGroup !== true)\r\n                      res.push(objGroup);\r\n                  }\r\n                  else {\r\n                    res.push(objGroup);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n          return res;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public getTermSets(termStore: ISPTermStore, group: ISPTermGroup): Promise<ISPTermSets> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getTermSetsFromMock(termStore.Identity, group.Guid);\r\n    }\r\n    else {\r\n      //Build the Client Service Request\r\n      var clientServiceUrl = this.context.pageContext.web.absoluteUrl + '/_vti_bin/client.svc/ProcessQuery';\r\n      var data = '<Request xmlns=\"http://schemas.microsoft.com/sharepoint/clientquery/2009\" SchemaVersion=\"15.0.0.0\" LibraryVersion=\"16.0.0.0\" ApplicationName=\"Javascript Library\"><Actions><ObjectPath Id=\"26\" ObjectPathId=\"25\" /><ObjectIdentityQuery Id=\"27\" ObjectPathId=\"25\" /><ObjectPath Id=\"29\" ObjectPathId=\"28\" /><Query Id=\"30\" ObjectPathId=\"28\"><Query SelectAllProperties=\"true\"><Properties /></Query><ChildItemQuery SelectAllProperties=\"true\"><Properties /></ChildItemQuery></Query></Actions><ObjectPaths><Method Id=\"25\" ParentId=\"15\" Name=\"GetById\"><Parameters><Parameter Type=\"String\">' + group.Guid + '</Parameter></Parameters></Method><Property Id=\"28\" ParentId=\"25\" Name=\"TermSets\" /><Property Id=\"15\" ParentId=\"5\" Name=\"Groups\" /><Identity Id=\"5\" Name=\"' + termStore.Identity + '\" /></ObjectPaths></Request>';\r\n      var httpPostOptions = {\r\n        headers: {\r\n              'accept': 'application/json',\r\n              'content-type': 'application/json',\r\n              \"X-RequestDigest\": this.formDigest\r\n        },\r\n        body: data\r\n      };\r\n      return this.context.spHttpClient.post(clientServiceUrl, SPHttpClient.configurations.v1, httpPostOptions).then((serviceResponse: SPHttpClientResponse) => {\r\n        return serviceResponse.json().then((serviceJSONResponse: any) => {\r\n          var res: ISPTermSets = [];\r\n          serviceJSONResponse.map((child: any) => {\r\n            var objType = child['_ObjectType_'];\r\n            if (objType === \"SP.Taxonomy.TermSetCollection\") {\r\n              if (child['_Child_Items_'] !== undefined) {\r\n                child['_Child_Items_'].map((childGroup: any) => {\r\n                  var objGroup: ISPTermSet = {\r\n                    Name: childGroup['Name'] !== undefined ? childGroup['Name'] : '',\r\n                    Guid: childGroup['Id'] !== undefined ? this.cleanGuid(childGroup['Id']) : '',\r\n                    Identity: childGroup['_ObjectIdentity_'] !== undefined ? childGroup['_ObjectIdentity_'] : '',\r\n                    CustomSortOrder: childGroup['CustomSortOrder'] !== undefined ? childGroup['CustomSortOrder'] : '',\r\n                    IsAvailableForTagging: childGroup['IsAvailableForTagging'] !== undefined ? childGroup['IsAvailableForTagging'] : '',\r\n                    Owner: childGroup['Owner'] !== undefined ? childGroup['Owner'] : '',\r\n                    Contact: childGroup['Contact'] !== undefined ? childGroup['Contact'] : '',\r\n                    Description: childGroup['Description'] !== undefined ? childGroup['Description'] : '',\r\n                    IsOpenForTermCreation: childGroup['IsOpenForTermCreation'] !== undefined ? childGroup['IsOpenForTermCreation'] : '',\r\n                    TermStoreGuid: termStore.Guid,\r\n                    leaf: true,\r\n                    type: 'TermSet'\r\n                  };\r\n                  if (this.props.displayOnlyTermSetsAvailableForTagging === true) {\r\n                    if (objGroup.IsAvailableForTagging === true)\r\n                      res.push(objGroup);\r\n                  }\r\n                  else {\r\n                    res.push(objGroup);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n          return res;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Clean the Guid from the Web Service response\r\n   * @param guid\r\n   */\r\n  private cleanGuid(guid: string): string {\r\n    if (guid !== undefined)\r\n      return guid.replace('/Guid(', '').replace('/', '').replace(')', '');\r\n    else\r\n      return '';\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Returns 3 fake SharePoint lists for the Mock mode\r\n   */\r\n  private getTermStoresFromMock(): Promise<ISPTermStores> {\r\n    return SPTermStoreMockHttpClient.getTermStores(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const mockData: ISPTermStores = [\r\n            { Name: 'Taxonomy_jHIKWt45FAQsxsbHfZ3r1Q==', Guid: '/Guid(8ca33abb-2ee5-42d4-acb6-bd138adec078)/',\r\n              Identity: '8ca33abb-2ee5-42d4-acb6-bd138adec078',\r\n              IsOnline: true, WorkingLanguage: '1033',\r\n              DefaultLanguage: '1033', Languages:[],\r\n              leaf: false, type: 'TermStore'\r\n            }\r\n          ];\r\n          return mockData;\r\n      }) as Promise<ISPTermStores>;\r\n  }\r\n\r\n  private getTermStoresGroupsFromMock(termStoreIdentity: string): Promise<ISPTermGroups> {\r\n    return SPTermStoreMockHttpClient.getTermStoresGroups(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const mockData: ISPTermGroups = [\r\n            {\r\n              Name: 'People', Guid: '/Guid(8ca33abb-2ee5-42d4-acb6-bd138adec078)/',\r\n              Identity: '8ca33abb-2ee5-42d4-acb6-bd138adec078',\r\n              IsSiteCollectionGroup: false,\r\n              IsSystemGroup: false,\r\n              CreatedDate: '',\r\n              LastModifiedDate: '',\r\n              leaf: false, type: 'TermGroup'\r\n            },\r\n            {\r\n              Name: 'Search Dictionaries', Guid: '/Guid(8ca33acc-2ee5-42d4-acb6-bd138adec078)/',\r\n              Identity: '8ca33abb-2ee5-42d4-acb6-bd138adec078',\r\n              IsSiteCollectionGroup: false,\r\n              IsSystemGroup: false,\r\n              CreatedDate: '',\r\n              LastModifiedDate: '',\r\n              leaf: false, type: 'TermGroup'\r\n            }\r\n          ];\r\n          return mockData;\r\n      }) as Promise<ISPTermGroups>;\r\n  }\r\n\r\n  private getTermSetsFromMock(termStoreIdentity: string, groupGuid: string): Promise<ISPTermSets> {\r\n    return SPTermStoreMockHttpClient.getTermSetsFromMock(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const mockData: ISPTermSets = [\r\n            {\r\n              Name: 'People', Guid: '/Guid(8ca44acc-2ee5-42d4-acb6-bd138adec078)/',\r\n              Identity: '8ca44acc-2ee5-42d4-acb6-bd138adec078',\r\n              CustomSortOrder: '',\r\n              IsAvailableForTagging: true,\r\n              Owner: '',\r\n              Contact: '',\r\n              Description: '',\r\n              IsOpenForTermCreation: true,\r\n              TermStoreGuid: '8ca33abb-2ee5-42d4-acb6-bd138adec078',\r\n              leaf: true, type: 'TermSet'\r\n            },\r\n            {\r\n              Name: 'Job Title', Guid: '/Guid(8ca44acc-2ff4-42d4-acb6-bd138adec078)/',\r\n              Identity: '8ca44acc-2ff4-42d4-acb6-bd138adec078',\r\n              CustomSortOrder: '',\r\n              IsAvailableForTagging: true,\r\n              Owner: '',\r\n              Contact: '',\r\n              Description: '',\r\n              IsOpenForTermCreation: true,\r\n              TermStoreGuid: '8ca33abb-2ee5-42d4-acb6-bd138adec078',\r\n              leaf: true, type: 'TermSet'\r\n            }\r\n          ];\r\n          return mockData;\r\n      }) as Promise<ISPTermSets>;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @class\r\n * Defines a http client to request mock data to use the web part with the local workbench\r\n */\r\nclass SPTermStoreMockHttpClient {\r\n\r\n    /**\r\n     * @var\r\n     * Mock SharePoint result sample\r\n     */\r\n    private static _mockTermStores: ISPTermStores = [];\r\n\r\n    private static _mockTermStoresGroups: ISPTermGroups = [];\r\n\r\n    private static _mockTermSets: ISPTermSets = [];\r\n\r\n    /**\r\n     * @function\r\n     * Mock search People method\r\n     */\r\n    public static getTermStores(restUrl: string, options?: any): Promise<ISPTermStores> {\r\n      return new Promise<ISPTermStores>((resolve) => {\r\n            resolve(SPTermStoreMockHttpClient._mockTermStores);\r\n        });\r\n    }\r\n\r\n    public static getTermStoresGroups(restUrl: string, options?: any): Promise<ISPTermGroups> {\r\n      return new Promise<ISPTermGroups>((resolve) => {\r\n            resolve(SPTermStoreMockHttpClient._mockTermStoresGroups);\r\n        });\r\n    }\r\n\r\n    public static getTermSetsFromMock(restUrl: string, options?: any): Promise<ISPTermSets> {\r\n      return new Promise<ISPTermSets>((resolve) => {\r\n            resolve(SPTermStoreMockHttpClient._mockTermSets);\r\n        });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"..\\src"}
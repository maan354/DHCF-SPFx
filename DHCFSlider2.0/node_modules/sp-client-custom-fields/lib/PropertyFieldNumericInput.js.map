{"version":3,"sources":["PropertyFieldNumericInput.ts"],"names":[],"mappings":"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","file":"PropertyFieldNumericInput.js","sourcesContent":["/**\r\n * @file PropertyFieldNumericInput.ts\r\n * Define a custom field of type PropertyFieldNumericInput for\r\n * the SharePoint Framework (SPfx)\r\n *\r\n * @copyright 2017 Olivier Carpentier\r\n * Released under MIT licence\r\n */\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport {\r\n  IPropertyPaneField,\r\n  PropertyPaneFieldType,\r\n  IPropertyPaneCustomFieldProps\r\n} from '@microsoft/sp-webpart-base';\r\nimport PropertyFieldNumericInputHost, { IPropertyFieldNumericInputHostProps } from './PropertyFieldNumericInputHost';\r\n\r\n/**\r\n * @interface\r\n * Public properties of the PropertyFieldNumericInput custom field\r\n *\r\n */\r\nexport interface IPropertyFieldNumericInputProps {\r\n  /**\r\n   * @var\r\n   * Property field label displayed on top\r\n   */\r\n  label: string;\r\n  /**\r\n   * @var\r\n   * Initial value\r\n   */\r\n  initialValue?: number;\r\n  /**\r\n   * Minimum value. Default is Number.MIN_VALUE\r\n   */\r\n  min?: number;\r\n  /**\r\n   * Maximum value. Default is Number.MAX_VALUE\r\n   */\r\n  max?: number;\r\n  /**\r\n   * Step. Default is 1\r\n   */\r\n  step?: number;\r\n  /**\r\n   * Prevision (decimal). Default is 0.\r\n   */\r\n  precision?: number;\r\n  /**\r\n   * Input size (number of displayed chars). Default is 10.\r\n   */\r\n  size?: number;\r\n  /**\r\n   * @function\r\n   * Defines a onPropertyChange function to raise when the selected value changed.\r\n   * Normally this function must be always defined with the 'this.onPropertyChange'\r\n   * method of the web part object.\r\n   */\r\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\r\n  /**\r\n   * @function\r\n   * This API is called to render the web part.\r\n   * Normally this function must be always defined with the 'this.render.bind(this)'\r\n   * method of the web part object.\r\n   */\r\n  render(): void;\r\n  /**\r\n   * This property is used to indicate the web part's PropertyPane interaction mode: Reactive or NonReactive.\r\n   * The default behaviour is Reactive.\r\n   */\r\n  disableReactivePropertyChanges?: boolean;\r\n  /**\r\n   * @var\r\n   * Parent Web Part properties\r\n   */\r\n  properties: any;\r\n  /**\r\n   * @var\r\n   * An UNIQUE key indicates the identity of this control\r\n   */\r\n  key?: string;\r\n  /**\r\n   * Whether the property pane field is enabled or not.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * The method is used to get the validation error message and determine whether the input value is valid or not.\r\n   *\r\n   *   When it returns string:\r\n   *   - If valid, it returns empty string.\r\n   *   - If invalid, it returns the error message string and the text field will\r\n   *     show a red border and show an error message below the text field.\r\n   *\r\n   *   When it returns Promise<string>:\r\n   *   - The resolved value is display as error message.\r\n   *   - The rejected, the value is thrown away.\r\n   *\r\n   */\r\n   onGetErrorMessage?: (value: number) => string | Promise<string>;\r\n   /**\r\n    * Custom Field will start to validate after users stop typing for `deferredValidationTime` milliseconds.\r\n    * Default value is 200.\r\n    */\r\n   deferredValidationTime?: number;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Private properties of the PropertyFieldNumericInput custom field.\r\n * We separate public & private properties to include onRender & onDispose method waited\r\n * by the PropertyFieldCustom, witout asking to the developer to add it when he's using\r\n * the PropertyFieldNumericInput.\r\n *\r\n */\r\nexport interface IPropertyFieldNumericInputPropsInternal extends IPropertyPaneCustomFieldProps {\r\n  label: string;\r\n  initialValue?: number;\r\n  min?: number;\r\n  max?: number;\r\n  step?: number;\r\n  precision?: number;\r\n  size?: number;\r\n  targetProperty: string;\r\n  onRender(elem: HTMLElement): void;\r\n  onDispose(elem: HTMLElement): void;\r\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\r\n  render(): void;\r\n  disableReactivePropertyChanges?: boolean;\r\n  properties: any;\r\n  disabled?: boolean;\r\n  onGetErrorMessage?: (value: number) => string | Promise<string>;\r\n  deferredValidationTime?: number;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Represents a PropertyFieldNumericInput object\r\n *\r\n */\r\nclass PropertyFieldNumericInputBuilder implements IPropertyPaneField<IPropertyFieldNumericInputPropsInternal> {\r\n\r\n  //Properties defined by IPropertyPaneField\r\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\r\n  public targetProperty: string;\r\n  public properties: IPropertyFieldNumericInputPropsInternal;\r\n\r\n  //Custom properties\r\n  private label: string;\r\n  private initialValue: number = 0;\r\n  private min: number = Number.MIN_VALUE;\r\n  private max: number = Number.MAX_VALUE;\r\n  private step: number = 1;\r\n  private precision: number = 0;\r\n  private size: number = 10;\r\n  private onPropertyChange: (propertyPath: string, oldValue: any, newValue: any) => void;\r\n  private customProperties: any;\r\n  private key: string;\r\n  private disabled: boolean = false;\r\n  private onGetErrorMessage: (value: number) => string | Promise<string>;\r\n  private deferredValidationTime: number = 200;\r\n  private renderWebPart: () => void;\r\n  private disableReactivePropertyChanges: boolean = false;\r\n\r\n  /**\r\n   * @function\r\n   * Ctor\r\n   */\r\n  public constructor(_targetProperty: string, _properties: IPropertyFieldNumericInputPropsInternal) {\r\n    this.render = this.render.bind(this);\r\n    this.targetProperty = _properties.targetProperty;\r\n    this.properties = _properties;\r\n    this.label = _properties.label;\r\n    if (_properties.initialValue !== undefined)\r\n      this.initialValue = _properties.initialValue;\r\n    this.properties.onDispose = this.dispose;\r\n    this.properties.onRender = this.render;\r\n    this.onPropertyChange = _properties.onPropertyChange;\r\n    this.customProperties = _properties.properties;\r\n    this.key = _properties.key;\r\n    if (_properties.disabled === true)\r\n      this.disabled = _properties.disabled;\r\n    this.onGetErrorMessage = _properties.onGetErrorMessage;\r\n    if (_properties.deferredValidationTime !== undefined)\r\n      this.deferredValidationTime = _properties.deferredValidationTime;\r\n    if (_properties.min !== undefined)\r\n      this.min = _properties.min;\r\n    if (_properties.max !== undefined)\r\n      this.max = _properties.max;\r\n    if (_properties.step !== undefined)\r\n      this.step = _properties.step;\r\n    if (_properties.precision !== undefined)\r\n      this.precision = _properties.precision;\r\n    if (_properties.size !== undefined)\r\n      this.size = _properties.size;\r\n    this.renderWebPart = _properties.render;\r\n    if (_properties.disableReactivePropertyChanges !== undefined && _properties.disableReactivePropertyChanges != null)\r\n      this.disableReactivePropertyChanges = _properties.disableReactivePropertyChanges;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the picker field content\r\n   */\r\n  private render(elem: HTMLElement): void {\r\n    //Construct the JSX properties\r\n    const element: React.ReactElement<IPropertyFieldNumericInputHostProps> = React.createElement(PropertyFieldNumericInputHost, {\r\n      label: this.label,\r\n      initialValue: this.initialValue,\r\n      min: this.min,\r\n      max: this.max,\r\n      step: this.step,\r\n      precision: this.precision,\r\n      size: this.size,\r\n      targetProperty: this.targetProperty,\r\n      onDispose: this.dispose,\r\n      onRender: this.render,\r\n      onPropertyChange: this.onPropertyChange,\r\n      properties: this.customProperties,\r\n      key: this.key,\r\n      disabled: this.disabled,\r\n      onGetErrorMessage: this.onGetErrorMessage,\r\n      deferredValidationTime: this.deferredValidationTime,\r\n      render: this.renderWebPart,\r\n      disableReactivePropertyChanges: this.disableReactivePropertyChanges\r\n    });\r\n    //Calls the REACT content generator\r\n    ReactDom.render(element, elem);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Disposes the current object\r\n   */\r\n  private dispose(elem: HTMLElement): void {\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @function\r\n * Helper method to create the customer field on the PropertyPane.\r\n * @param targetProperty - Target property the custom field is associated to.\r\n * @param properties - Strongly typed custom field properties.\r\n */\r\nexport function PropertyFieldNumericInput(targetProperty: string, properties: IPropertyFieldNumericInputProps): IPropertyPaneField<IPropertyFieldNumericInputPropsInternal> {\r\n\r\n    //Create an internal properties object from the given properties\r\n    var newProperties: IPropertyFieldNumericInputPropsInternal = {\r\n      label: properties.label,\r\n      targetProperty: targetProperty,\r\n      initialValue: properties.initialValue,\r\n      min: properties.min,\r\n      max: properties.max,\r\n      step: properties.step,\r\n      precision: properties.precision,\r\n      size: properties.size,\r\n      onPropertyChange: properties.onPropertyChange,\r\n      properties: properties.properties,\r\n      onDispose: null,\r\n      onRender: null,\r\n      key: properties.key,\r\n      disabled: properties.disabled,\r\n      onGetErrorMessage: properties.onGetErrorMessage,\r\n      deferredValidationTime: properties.deferredValidationTime,\r\n      render: properties.render,\r\n      disableReactivePropertyChanges: properties.disableReactivePropertyChanges\r\n    };\r\n    //Calls the PropertyFieldNumericInput builder object\r\n    //This object will simulate a PropertyFieldCustom to manage his rendering process\r\n    return new PropertyFieldNumericInputBuilder(targetProperty, newProperties);\r\n}\r\n\r\n\r\n"],"sourceRoot":"..\\src"}
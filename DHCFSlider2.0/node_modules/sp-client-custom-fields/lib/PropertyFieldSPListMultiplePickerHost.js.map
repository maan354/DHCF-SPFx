{"version":3,"sources":["PropertyFieldSPListMultiplePickerHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldSPListMultiplePickerHost.js","sourcesContent":["/**\r\n * @file PropertyFieldSPListMultiplePickerHost.tsx\r\n * Renders the controls for PropertyFieldSPListMultiplePicker component\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n *\r\n */\r\nimport * as React from 'react';\r\nimport { IWebPartContext} from '@microsoft/sp-webpart-base';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport { Spinner, SpinnerType } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport GuidHelper from './GuidHelper';\r\nimport { IPropertyFieldSPListMultiplePickerPropsInternal, PropertyFieldSPListMultiplePickerOrderBy } from './PropertyFieldSPListMultiplePicker';\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldSPListMultiplePickerHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldSPListMultiplePickerHostProps extends IPropertyFieldSPListMultiplePickerPropsInternal {\r\n}\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldSPListMultiplePickerHost state interface\r\n *\r\n */\r\nexport interface IPropertyFieldSPListMultiplePickerHostState {\r\n  results: IChoiceGroupOption[];\r\n  selectedKeys: string[];\r\n  loaded: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldSPListMultiplePicker component\r\n */\r\nexport default class PropertyFieldSPListMultiplePickerHost extends React.Component<IPropertyFieldSPListMultiplePickerHostProps, IPropertyFieldSPListMultiplePickerHostState> {\r\n\r\n  private options: IChoiceGroupOption[] = [];\r\n  private loaded: boolean = false;\r\n  private async: Async;\r\n  private delayedValidate: (value: string[]) => void;\r\n  private _key: string;\r\n\r\n  /**\r\n   * @function\r\n   * Constructor\r\n   */\r\n  constructor(props: IPropertyFieldSPListMultiplePickerHostProps) {\r\n    super(props);\r\n\r\n    this._key = GuidHelper.getGuid();\r\n    this.onChanged = this.onChanged.bind(this);\r\n    this.state = {\r\n\t\t\tresults: this.options,\r\n      selectedKeys: [],\r\n      loaded: this.loaded,\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n\r\n    this.loadLists();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Loads the list from SharePoint current web site\r\n   */\r\n  private loadLists(): void {\r\n    //Builds the SharePoint List service\r\n    var listService: SPListPickerService = new SPListPickerService(this.props, this.props.context);\r\n    //Gets the libs\r\n    listService.getLibs().then((response: ISPLists) => {\r\n      response.value.map((list: ISPList) => {\r\n        var isSelected: boolean = false;\r\n        var indexInExisting: number = -1;\r\n        //Defines if the current list must be selected by default\r\n        if ( this.props.selectedLists)\r\n          indexInExisting = this.props.selectedLists.indexOf(list.Id);\r\n        if (indexInExisting > -1) {\r\n          isSelected = true;\r\n          this.state.selectedKeys.push(list.Id);\r\n        }\r\n        //Add the option to the list\r\n        this.options.push({\r\n          key: list.Id,\r\n          text: list.Title,\r\n          isChecked: isSelected\r\n        });\r\n      });\r\n      this.loaded = true;\r\n      this.setState({results: this.options, selectedKeys: this.state.selectedKeys, loaded: true});\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Remove a string from the selected keys\r\n   */\r\n  private removeSelected(element: string): void {\r\n    var res = [];\r\n    for (var i = 0; i < this.state.selectedKeys.length; i++) {\r\n      if (this.state.selectedKeys[i] !== element)\r\n        res.push(this.state.selectedKeys[i]);\r\n    }\r\n    this.state.selectedKeys = res;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Raises when a list has been selected\r\n   */\r\n  private onChanged(element: React.FormEvent<HTMLElement>, isChecked: boolean): void {\r\n    if (element) {\r\n      var value: string = (element.currentTarget as any).value;\r\n\r\n      if (isChecked === false) {\r\n        this.removeSelected(value);\r\n      }\r\n      else {\r\n        this.state.selectedKeys.push(value);\r\n      }\r\n      this.setState(this.state);\r\n      this.delayedValidate(this.state.selectedKeys);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: string[]): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.selectedLists, value);\r\n      return;\r\n    }\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || []);\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.selectedLists, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.selectedLists, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.selectedLists, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: string[], newValue: string[]) {\r\n    if (this.props.onPropertyChange && newValue != null) {\r\n      this.props.properties[this.props.targetProperty] = newValue;\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n      if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the SPListMultiplePicker controls with Office UI  Fabric\r\n   */\r\n  public render(): JSX.Element {\r\n\r\n    if (this.loaded === false) {\r\n       return (\r\n        <div>\r\n          <Label>{this.props.label}</Label>\r\n          <Spinner type={ SpinnerType.normal } />\r\n        </div>\r\n    );\r\n    }\r\n    else\r\n    {\r\n        var styleOfLabel: any = {\r\n          color: this.props.disabled === true ? '#A6A6A6' : 'auto'\r\n        };\r\n        //Renders content\r\n        return (\r\n          <div>\r\n            <Label>{this.props.label}</Label>\r\n            {this.options.map((item: IChoiceGroupOption, index: number) => {\r\n              var uniqueKey = this.props.targetProperty + '-' + item.key;\r\n              return (\r\n                <div className=\"ms-ChoiceField\" key={this._key + '-multiplelistpicker-' + index}>\r\n                  <Checkbox\r\n                    defaultChecked={item.isChecked}\r\n                    disabled={this.props.disabled}\r\n                    label={item.text}\r\n                    onChange={this.onChanged}\r\n                    inputProps={{value: item.key}}\r\n                  />\r\n                </div>\r\n              );\r\n            })\r\n            }\r\n            { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n              <div style={{paddingBottom: '8px'}}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n              <span>\r\n                <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n              </span>\r\n              </div>\r\n            : ''}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @interface\r\n * Defines a collection of SharePoint lists\r\n */\r\ninterface ISPLists {\r\n  value: ISPList[];\r\n}\r\n\r\n/**\r\n * @interface\r\n * Defines a SharePoint list\r\n */\r\ninterface ISPList {\r\n  Title: string;\r\n  Id: string;\r\n  BaseTemplate: string;\r\n}\r\n\r\n/**\r\n * @class\r\n * Service implementation to get list & list items from current SharePoint site\r\n */\r\nclass SPListPickerService {\r\n\r\n  private context: IWebPartContext;\r\n  private props: IPropertyFieldSPListMultiplePickerHostProps;\r\n\r\n  /**\r\n   * @function\r\n   * Service constructor\r\n   */\r\n  constructor(_props: IPropertyFieldSPListMultiplePickerHostProps, pageContext: IWebPartContext){\r\n      this.props = _props;\r\n      this.context = pageContext;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the collection of SP libs in the current SharePoint site\r\n   */\r\n  public getLibs(): Promise<ISPLists> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getLibsFromMock();\r\n    }\r\n    else {\r\n      //If the running environment is SharePoint, request the lists REST service\r\n      var queryUrl: string = this.context.pageContext.web.absoluteUrl;\r\n      queryUrl += \"/_api/lists?$select=Title,id,BaseTemplate\";\r\n      if (this.props.orderBy != null) {\r\n        queryUrl += \"&$orderby=\";\r\n        if (this.props.orderBy == PropertyFieldSPListMultiplePickerOrderBy.Id)\r\n          queryUrl += \"Id\";\r\n        else if (this.props.orderBy == PropertyFieldSPListMultiplePickerOrderBy.Title)\r\n          queryUrl += \"Title\";\r\n      }\r\n      if (this.props.baseTemplate != null && this.props.baseTemplate) {\r\n        queryUrl += \"&$filter=BaseTemplate%20eq%20\";\r\n        queryUrl += this.props.baseTemplate;\r\n        if (this.props.includeHidden === false) {\r\n          queryUrl += \"%20and%20Hidden%20eq%20false\";\r\n        }\r\n      }\r\n      else {\r\n        if (this.props.includeHidden === false) {\r\n          queryUrl += \"&$filter=Hidden%20eq%20false\";\r\n        }\r\n      }\r\n      return this.context.spHttpClient.get(queryUrl, SPHttpClient.configurations.v1).then((response: SPHttpClientResponse) => {\r\n          return response.json();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Returns 3 fake SharePoint lists for the Mock mode\r\n   */\r\n  private getLibsFromMock(): Promise<ISPLists> {\r\n    return SPListPickerMockHttpClient.getLists(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const listData: ISPLists = {\r\n              value:\r\n              [\r\n                  { Title: 'Mock List One', Id: '6770c83b-29e8-494b-87b6-468a2066bcc6', BaseTemplate: '109' },\r\n                  { Title: 'Mock List Two', Id: '2ece98f2-cc5e-48ff-8145-badf5009754c', BaseTemplate: '109' },\r\n                  { Title: 'Mock List Three', Id: 'bd5dbd33-0e8d-4e12-b289-b276e5ef79c2', BaseTemplate: '109' }\r\n              ]\r\n          };\r\n          return listData;\r\n      }) as Promise<ISPLists>;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @class\r\n * Defines a http client to request mock data to use the web part with the local workbench\r\n */\r\nclass SPListPickerMockHttpClient {\r\n\r\n    /**\r\n     * @var\r\n     * Mock SharePoint result sample\r\n     */\r\n    private static _results: ISPLists = { value: []};\r\n\r\n    /**\r\n     * @function\r\n     * Mock search People method\r\n     */\r\n    public static getLists(restUrl: string, options?: any): Promise<ISPLists> {\r\n      return new Promise<ISPLists>((resolve) => {\r\n            resolve(SPListPickerMockHttpClient._results);\r\n        });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"..\\src"}
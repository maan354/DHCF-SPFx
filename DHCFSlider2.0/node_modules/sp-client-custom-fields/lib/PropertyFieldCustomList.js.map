{"version":3,"sources":["PropertyFieldCustomList.ts"],"names":[],"mappings":"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","file":"PropertyFieldCustomList.js","sourcesContent":["/**\r\n * @file PropertyFieldCustomList.ts\r\n * Define a custom field of type PropertyFieldCustomList for\r\n * the SharePoint Framework (SPfx)\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n */\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport {\r\n  IPropertyPaneField,\r\n  PropertyPaneFieldType,\r\n  IPropertyPaneCustomFieldProps\r\n} from '@microsoft/sp-webpart-base';\r\nimport PropertyFieldCustomListHost, { IPropertyFieldCustomListHostProps } from './PropertyFieldCustomListHost';\r\nimport { IWebPartContext } from '@microsoft/sp-webpart-base';\r\n\r\nexport enum CustomListFieldType {\r\n  string = 0,\r\n  number = 1,\r\n  date = 2,\r\n  boolean = 3,\r\n  dateTime = 4,\r\n  font = 5,\r\n  fontSize = 6,\r\n  color = 7,\r\n  icon = 8,\r\n  password = 9,\r\n  picture = 10,\r\n  document = 11,\r\n  list = 12,\r\n  users = 13,\r\n  folder = 14,\r\n  sharePointGroups = 15,\r\n  securityGroups = 16,\r\n  officeVideo = 17,\r\n  stars = 18,\r\n  colorMini = 19\r\n}\r\n\r\nexport interface ICustomListField {\r\n  id: string;\r\n  title: string;\r\n  type: CustomListFieldType;\r\n  required?: boolean;\r\n  hidden?: boolean;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Public properties of the PropertyFieldCustomList custom field\r\n *\r\n */\r\nexport interface IPropertyFieldCustomListProps {\r\n  /**\r\n   * @var\r\n   * Property field label displayed on top\r\n   */\r\n  label: string;\r\n  /**\r\n   * @var\r\n   * Defines the Panel title\r\n   */\r\n  headerText: string;\r\n  /**\r\n   * @var\r\n   * Defines the fields of the list\r\n   */\r\n  fields: ICustomListField[];\r\n  /**\r\n   * @var\r\n   * Initial value\r\n   */\r\n  value?: any[];\r\n  /**\r\n   * @var\r\n   * Parent web part context\r\n   */\r\n  context: IWebPartContext;\r\n  /**\r\n   * @function\r\n   * Defines a onPropertyChange function to raise when the selected Color changed.\r\n   * Normally this function must be always defined with the 'this.onPropertyChange'\r\n   * method of the web part object.\r\n   */\r\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\r\n  /**\r\n   * @function\r\n   * This API is called to render the web part.\r\n   * Normally this function must be always defined with the 'this.render.bind(this)'\r\n   * method of the web part object.\r\n   */\r\n  render(): void;\r\n  /**\r\n   * This property is used to indicate the web part's PropertyPane interaction mode: Reactive or NonReactive.\r\n   * The default behaviour is Reactive.\r\n   */\r\n  disableReactivePropertyChanges?: boolean;\r\n  /**\r\n   * @var\r\n   * Parent Web Part properties\r\n   */\r\n  properties: any;\r\n  /**\r\n   * @var\r\n   * An UNIQUE key indicates the identity of this control\r\n   */\r\n  key?: string;\r\n  /**\r\n   * Whether the property pane field is enabled or not.\r\n   */\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Private properties of the PropertyFieldCustomList custom field.\r\n * We separate public & private properties to include onRender & onDispose method waited\r\n * by the PropertyFieldCustom, witout asking to the developer to add it when he's using\r\n * the PropertyFieldCustomList.\r\n *\r\n */\r\nexport interface IPropertyFieldCustomListPropsInternal extends IPropertyPaneCustomFieldProps {\r\n  label: string;\r\n  fields: ICustomListField[];\r\n  value?: any[];\r\n  headerText: string;\r\n  targetProperty: string;\r\n  context: IWebPartContext;\r\n  onRender(elem: HTMLElement): void;\r\n  onDispose(elem: HTMLElement): void;\r\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\r\n  render(): void;\r\n  disableReactivePropertyChanges?: boolean;\r\n  properties: any;\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Represents a PropertyFieldCustomList object\r\n *\r\n */\r\nclass PropertyFieldCustomListBuilder implements IPropertyPaneField<IPropertyFieldCustomListPropsInternal> {\r\n\r\n  //Properties defined by IPropertyPaneField\r\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\r\n  public targetProperty: string;\r\n  public properties: IPropertyFieldCustomListPropsInternal;\r\n\r\n  //Custom properties\r\n  private label: string;\r\n  private fields: ICustomListField[];\r\n  private value: any[];\r\n  private headerText: string;\r\n  private context: IWebPartContext;\r\n  private onPropertyChange: (propertyPath: string, oldValue: any, newValue: any) => void;\r\n  private customProperties: any;\r\n  private key: string;\r\n  private disabled: boolean = false;\r\n  private renderWebPart: () => void;\r\n  private disableReactivePropertyChanges: boolean = false;\r\n\r\n  /**\r\n   * @function\r\n   * Ctor\r\n   */\r\n  public constructor(_targetProperty: string, _properties: IPropertyFieldCustomListPropsInternal) {\r\n    this.render = this.render.bind(this);\r\n    this.targetProperty = _properties.targetProperty;\r\n    this.properties = _properties;\r\n    this.label = _properties.label;\r\n    this.value = _properties.value;\r\n    this.fields = _properties.fields;\r\n    this.headerText = _properties.headerText;\r\n    this.context = _properties.context;\r\n    this.properties.onDispose = this.dispose;\r\n    this.properties.onRender = this.render;\r\n    this.onPropertyChange = _properties.onPropertyChange;\r\n    this.customProperties = _properties.properties;\r\n    this.key = _properties.key;\r\n    if (_properties.disabled === true)\r\n      this.disabled = _properties.disabled;\r\n    this.renderWebPart = _properties.render;\r\n    if (_properties.disableReactivePropertyChanges !== undefined && _properties.disableReactivePropertyChanges != null)\r\n      this.disableReactivePropertyChanges = _properties.disableReactivePropertyChanges;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the ColorPicker field content\r\n   */\r\n  private render(elem: HTMLElement): void {\r\n    //Construct the JSX properties\r\n    const element: React.ReactElement<IPropertyFieldCustomListHostProps> = React.createElement(PropertyFieldCustomListHost, {\r\n      label: this.label,\r\n      value: this.value,\r\n      headerText: this.headerText,\r\n      fields: this.fields,\r\n      targetProperty: this.targetProperty,\r\n      onDispose: this.dispose,\r\n      onRender: this.render,\r\n      onPropertyChange: this.onPropertyChange,\r\n      context: this.context,\r\n      properties: this.customProperties,\r\n      key: this.key,\r\n      disabled: this.disabled,\r\n      render: this.renderWebPart,\r\n      disableReactivePropertyChanges: this.disableReactivePropertyChanges\r\n    });\r\n    //Calls the REACT content generator\r\n    ReactDom.render(element, elem);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Disposes the current object\r\n   */\r\n  private dispose(elem: HTMLElement): void {\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @function\r\n * Helper method to create the customer field on the PropertyPane.\r\n * @param targetProperty - Target property the custom field is associated to.\r\n * @param properties - Strongly typed custom field properties.\r\n */\r\nexport function PropertyFieldCustomList(targetProperty: string, properties: IPropertyFieldCustomListProps): IPropertyPaneField<IPropertyFieldCustomListPropsInternal> {\r\n\r\n    //Create an internal properties object from the given properties\r\n    var newProperties: IPropertyFieldCustomListPropsInternal = {\r\n      label: properties.label,\r\n      targetProperty: targetProperty,\r\n      headerText: properties.headerText,\r\n      value: properties.value,\r\n      fields: properties.fields,\r\n      onPropertyChange: properties.onPropertyChange,\r\n      properties: properties.properties,\r\n      context: properties.context,\r\n      onDispose: null,\r\n      onRender: null,\r\n      key: properties.key,\r\n      disabled: properties.disabled,\r\n      render: properties.render,\r\n      disableReactivePropertyChanges: properties.disableReactivePropertyChanges\r\n    };\r\n    //Calls the PropertyFieldCustomList builder object\r\n    //This object will simulate a PropertyFieldCustom to manage his rendering process\r\n    return new PropertyFieldCustomListBuilder(targetProperty, newProperties);\r\n}\r\n\r\n\r\n"],"sourceRoot":"..\\src"}
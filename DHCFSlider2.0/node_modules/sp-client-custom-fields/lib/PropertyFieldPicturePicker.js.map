{"version":3,"sources":["PropertyFieldPicturePicker.ts"],"names":[],"mappings":";;AAAA;;;;;;;GAOG;AACH,6BAA+B;AAC/B,oCAAsC;AACtC,8DAIoC;AACpC,mFAAwH;AAuHxH;;;;GAIG;AACH;IAuBE;;;OAGG;IACH,2CAAmB,eAAuB,EAAE,WAAqD;QAzBjG,0CAA0C;QACnC,SAAI,GAA0B,uCAAqB,CAAC,MAAM,CAAC;QAW1D,aAAQ,GAAY,KAAK,CAAC;QAE1B,2BAAsB,GAAW,GAAG,CAAC;QACrC,iBAAY,GAAY,IAAI,CAAC;QAC7B,aAAQ,GAAY,IAAI,CAAC;QACzB,0BAAqB,GAAW,gDAAgD,CAAC;QAEjF,mCAA8B,GAAY,KAAK,CAAC;QAOtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,UAAU,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;QAC3B,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,KAAK,IAAI,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,iBAAiB,CAAC;QACvD,EAAE,CAAC,CAAC,WAAW,CAAC,sBAAsB,KAAK,SAAS,CAAC;YACnD,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC,sBAAsB,CAAC;QACnE,EAAE,CAAC,CAAC,WAAW,CAAC,YAAY,IAAI,IAAI,IAAI,WAAW,CAAC,YAAY,IAAI,SAAS,CAAC;YAC5E,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QAC/C,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,KAAK,KAAK,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QACvC,EAAE,CAAC,CAAC,WAAW,CAAC,qBAAqB,IAAI,IAAI,IAAI,WAAW,CAAC,qBAAqB,KAAK,SAAS,IAAI,WAAW,CAAC,qBAAqB,IAAI,EAAE,CAAC;YAC1I,IAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC,qBAAqB,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC;QACxC,EAAE,CAAC,CAAC,WAAW,CAAC,8BAA8B,KAAK,SAAS,IAAI,WAAW,CAAC,8BAA8B,IAAI,IAAI,CAAC;YACjH,IAAI,CAAC,8BAA8B,GAAG,WAAW,CAAC,8BAA8B,CAAC;IACrF,CAAC;IAED;;;OAGG;IACK,kDAAM,GAAd,UAAe,IAAiB;QAC9B,8BAA8B;QAC9B,IAAM,OAAO,GAA6D,KAAK,CAAC,aAAa,CAAC,wCAA8B,EAAE;YAC5H,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,QAAQ,EAAE,IAAI,CAAC,MAAM;YACrB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,UAAU,EAAE,IAAI,CAAC,gBAAgB;YACjC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;YACjD,MAAM,EAAE,IAAI,CAAC,aAAa;YAC1B,8BAA8B,EAAE,IAAI,CAAC,8BAA8B;SACpE,CAAC,CAAC;QACH,mCAAmC;QACnC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;;OAGG;IACK,mDAAO,GAAf,UAAgB,IAAiB;IAEjC,CAAC;IAEH,wCAAC;AAAD,CA5FA,AA4FC,IAAA;AAED;;;;;GAKG;AACH,oCAA2C,cAAsB,EAAE,UAA4C;IAE3G,gEAAgE;IAChE,IAAI,aAAa,GAA6C;QAC5D,KAAK,EAAE,UAAU,CAAC,KAAK;QACvB,cAAc,EAAE,cAAc;QAC9B,YAAY,EAAE,UAAU,CAAC,YAAY;QACrC,gBAAgB,EAAE,UAAU,CAAC,gBAAgB;QAC7C,UAAU,EAAE,UAAU,CAAC,UAAU;QACjC,OAAO,EAAE,UAAU,CAAC,OAAO;QAC3B,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,UAAU,CAAC,GAAG;QACnB,QAAQ,EAAE,UAAU,CAAC,QAAQ;QAC7B,iBAAiB,EAAE,UAAU,CAAC,iBAAiB;QAC/C,sBAAsB,EAAE,UAAU,CAAC,sBAAsB;QACzD,YAAY,EAAE,UAAU,CAAC,YAAY;QACrC,QAAQ,EAAE,UAAU,CAAC,QAAQ;QAC7B,qBAAqB,EAAE,UAAU,CAAC,qBAAqB;QACvD,MAAM,EAAE,UAAU,CAAC,MAAM;QACzB,8BAA8B,EAAE,UAAU,CAAC,8BAA8B;KAC1E,CAAC;IACF,qDAAqD;IACrD,iFAAiF;IACjF,MAAM,CAAC,IAAI,iCAAiC,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;AAChF,CAAC;AAzBD,gEAyBC","file":"PropertyFieldPicturePicker.js","sourcesContent":["/**\r\n * @file PropertyFieldPicturePicker.ts\r\n * Define a custom field of type PropertyFieldPicturePicker for\r\n * the SharePoint Framework (SPfx)\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n */\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport {\r\n  IPropertyPaneField,\r\n  PropertyPaneFieldType,\r\n  IPropertyPaneCustomFieldProps\r\n} from '@microsoft/sp-webpart-base';\r\nimport PropertyFieldPicturePickerHost, { IPropertyFieldPicturePickerHostProps } from './PropertyFieldPicturePickerHost';\r\nimport { IWebPartContext } from '@microsoft/sp-webpart-base';\r\n\r\n/**\r\n * @interface\r\n * Public properties of the PropertyFieldPicturePicker custom field\r\n *\r\n */\r\nexport interface IPropertyFieldPicturePickerProps {\r\n  /**\r\n   * @var\r\n   * Property field label displayed on top\r\n   */\r\n  label: string;\r\n  /**\r\n   * @var\r\n   * Initial value\r\n   */\r\n  initialValue?: string;\r\n  /**\r\n   * @var\r\n   * Parent web part context\r\n   */\r\n  context: IWebPartContext;\r\n  /**\r\n   * Whether the image preview is enabled or not. Default is true.\r\n   */\r\n  previewImage?: boolean;\r\n  /**\r\n   * Defines the file extensions allowed in the picker. You need to specifies all the extensions with\r\n   * a dot and to separate them with a comma without spaces. For example a good value is: `.gif,.png,.jpg`.\r\n   * The default value is `.gif,.jpg,.jpeg,.bmp,.dib,.tif,.tiff,.ico,.png`\r\n   */\r\n  allowedFileExtensions?: string;\r\n  /**\r\n   * Whether the image path can be edit manually or not. Default is true.\r\n   */\r\n  readOnly?: boolean;\r\n  /**\r\n   * @function\r\n   * Defines a onPropertyChange function to raise when the selected Color changed.\r\n   * Normally this function must be always defined with the 'this.onPropertyChange'\r\n   * method of the web part object.\r\n   */\r\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\r\n  /**\r\n   * @function\r\n   * This API is called to render the web part.\r\n   * Normally this function must be always defined with the 'this.render.bind(this)'\r\n   * method of the web part object.\r\n   */\r\n  render(): void;\r\n  /**\r\n   * This property is used to indicate the web part's PropertyPane interaction mode: Reactive or NonReactive.\r\n   * The default behaviour is Reactive.\r\n   */\r\n  disableReactivePropertyChanges?: boolean;\r\n  /**\r\n   * @var\r\n   * Parent Web Part properties\r\n   */\r\n  properties: any;\r\n  /**\r\n   * @var\r\n   * An UNIQUE key indicates the identity of this control\r\n   */\r\n  key?: string;\r\n  /**\r\n   * Whether the property pane field is enabled or not.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * The method is used to get the validation error message and determine whether the input value is valid or not.\r\n   *\r\n   *   When it returns string:\r\n   *   - If valid, it returns empty string.\r\n   *   - If invalid, it returns the error message string and the text field will\r\n   *     show a red border and show an error message below the text field.\r\n   *\r\n   *   When it returns Promise<string>:\r\n   *   - The resolved value is display as error message.\r\n   *   - The rejected, the value is thrown away.\r\n   *\r\n   */\r\n   onGetErrorMessage?: (value: string) => string | Promise<string>;\r\n   /**\r\n    * Custom Field will start to validate after users stop typing for `deferredValidationTime` milliseconds.\r\n    * Default value is 200.\r\n    */\r\n   deferredValidationTime?: number;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Private properties of the PropertyFieldPicturePicker custom field.\r\n * We separate public & private properties to include onRender & onDispose method waited\r\n * by the PropertyFieldCustom, witout asking to the developer to add it when he's using\r\n * the PropertyFieldPicturePicker.\r\n *\r\n */\r\nexport interface IPropertyFieldPicturePickerPropsInternal extends IPropertyPaneCustomFieldProps {\r\n  label: string;\r\n  initialValue?: string;\r\n  targetProperty: string;\r\n  context: IWebPartContext;\r\n  onRender(elem: HTMLElement): void;\r\n  onDispose(elem: HTMLElement): void;\r\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\r\n  render(): void;\r\n  disableReactivePropertyChanges?: boolean;\r\n  properties: any;\r\n  disabled?: boolean;\r\n  onGetErrorMessage?: (value: string) => string | Promise<string>;\r\n  deferredValidationTime?: number;\r\n  previewImage?: boolean;\r\n  readOnly?: boolean;\r\n  allowedFileExtensions?: string;\r\n}\r\n\r\n/**\r\n * @interface\r\n * Represents a PropertyFieldPicturePicker object\r\n *\r\n */\r\nclass PropertyFieldPicturePickerBuilder implements IPropertyPaneField<IPropertyFieldPicturePickerPropsInternal> {\r\n\r\n  //Properties defined by IPropertyPaneField\r\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\r\n  public targetProperty: string;\r\n  public properties: IPropertyFieldPicturePickerPropsInternal;\r\n\r\n  //Custom properties\r\n  private label: string;\r\n  private initialValue: string;\r\n  private context: IWebPartContext;\r\n  private onPropertyChange: (propertyPath: string, oldValue: any, newValue: any) => void;\r\n  private customProperties: any;\r\n  private key: string;\r\n  private disabled: boolean = false;\r\n  private onGetErrorMessage: (value: string) => string | Promise<string>;\r\n  private deferredValidationTime: number = 200;\r\n  private previewImage: boolean = true;\r\n  private readOnly: boolean = true;\r\n  private allowedFileExtensions: string = \".gif,.jpg,.jpeg,.bmp,.dib,.tif,.tiff,.ico,.png\";\r\n  private renderWebPart: () => void;\r\n  private disableReactivePropertyChanges: boolean = false;\r\n\r\n  /**\r\n   * @function\r\n   * Ctor\r\n   */\r\n  public constructor(_targetProperty: string, _properties: IPropertyFieldPicturePickerPropsInternal) {\r\n    this.render = this.render.bind(this);\r\n    this.targetProperty = _properties.targetProperty;\r\n    this.properties = _properties;\r\n    this.label = _properties.label;\r\n    this.initialValue = _properties.initialValue;\r\n    this.context = _properties.context;\r\n    this.properties.onDispose = this.dispose;\r\n    this.properties.onRender = this.render;\r\n    this.onPropertyChange = _properties.onPropertyChange;\r\n    this.customProperties = _properties.properties;\r\n    this.key = _properties.key;\r\n    if (_properties.disabled === true)\r\n      this.disabled = _properties.disabled;\r\n    this.onGetErrorMessage = _properties.onGetErrorMessage;\r\n    if (_properties.deferredValidationTime !== undefined)\r\n      this.deferredValidationTime = _properties.deferredValidationTime;\r\n    if (_properties.previewImage != null && _properties.previewImage != undefined)\r\n      this.previewImage = _properties.previewImage;\r\n    if (_properties.readOnly === false)\r\n      this.readOnly = _properties.readOnly;\r\n    if (_properties.allowedFileExtensions != null && _properties.allowedFileExtensions !== undefined && _properties.allowedFileExtensions != '')\r\n      this.allowedFileExtensions = _properties.allowedFileExtensions;\r\n    this.renderWebPart = _properties.render;\r\n    if (_properties.disableReactivePropertyChanges !== undefined && _properties.disableReactivePropertyChanges != null)\r\n      this.disableReactivePropertyChanges = _properties.disableReactivePropertyChanges;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the ColorPicker field content\r\n   */\r\n  private render(elem: HTMLElement): void {\r\n    //Construct the JSX properties\r\n    const element: React.ReactElement<IPropertyFieldPicturePickerHostProps> = React.createElement(PropertyFieldPicturePickerHost, {\r\n      label: this.label,\r\n      initialValue: this.initialValue,\r\n      context: this.context,\r\n      targetProperty: this.targetProperty,\r\n      onDispose: this.dispose,\r\n      onRender: this.render,\r\n      onPropertyChange: this.onPropertyChange,\r\n      properties: this.customProperties,\r\n      key: this.key,\r\n      disabled: this.disabled,\r\n      onGetErrorMessage: this.onGetErrorMessage,\r\n      deferredValidationTime: this.deferredValidationTime,\r\n      previewImage: this.previewImage,\r\n      readOnly: this.readOnly,\r\n      allowedFileExtensions: this.allowedFileExtensions,\r\n      render: this.renderWebPart,\r\n      disableReactivePropertyChanges: this.disableReactivePropertyChanges\r\n    });\r\n    //Calls the REACT content generator\r\n    ReactDom.render(element, elem);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Disposes the current object\r\n   */\r\n  private dispose(elem: HTMLElement): void {\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @function\r\n * Helper method to create a Picture Picker on the PropertyPane.\r\n * @param targetProperty - Target property the Picture picker is associated to.\r\n * @param properties - Strongly typed Picture Picker properties.\r\n */\r\nexport function PropertyFieldPicturePicker(targetProperty: string, properties: IPropertyFieldPicturePickerProps): IPropertyPaneField<IPropertyFieldPicturePickerPropsInternal> {\r\n\r\n    //Create an internal properties object from the given properties\r\n    var newProperties: IPropertyFieldPicturePickerPropsInternal = {\r\n      label: properties.label,\r\n      targetProperty: targetProperty,\r\n      initialValue: properties.initialValue,\r\n      onPropertyChange: properties.onPropertyChange,\r\n      properties: properties.properties,\r\n      context: properties.context,\r\n      onDispose: null,\r\n      onRender: null,\r\n      key: properties.key,\r\n      disabled: properties.disabled,\r\n      onGetErrorMessage: properties.onGetErrorMessage,\r\n      deferredValidationTime: properties.deferredValidationTime,\r\n      previewImage: properties.previewImage,\r\n      readOnly: properties.readOnly,\r\n      allowedFileExtensions: properties.allowedFileExtensions,\r\n      render: properties.render,\r\n      disableReactivePropertyChanges: properties.disableReactivePropertyChanges\r\n    };\r\n    //Calls the PropertyFieldPicturePicker builder object\r\n    //This object will simulate a PropertyFieldCustom to manage his rendering process\r\n    return new PropertyFieldPicturePickerBuilder(targetProperty, newProperties);\r\n}\r\n\r\n\r\n"],"sourceRoot":"..\\src"}
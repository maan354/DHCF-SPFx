{"version":3,"sources":["PropertyFieldDatePickerHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldDatePickerHost.js","sourcesContent":["/**\r\n * @file PropertyFieldDatePickerHost.tsx\r\n * Renders the controls for PropertyFieldDatePicker component\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n */\r\nimport * as React from 'react';\r\nimport { IPropertyFieldDatePickerPropsInternal } from './PropertyFieldDatePicker';\r\nimport { DatePicker, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\nimport * as strings from 'sp-client-custom-fields/strings';\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldDatePickerHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldDatePickerHostProps extends IPropertyFieldDatePickerPropsInternal {\r\n}\r\n\r\n/**\r\n * @class\r\n * Defines the labels of the DatePicker control (as months, days, etc.)\r\n *\r\n */\r\nclass DatePickerStrings implements IDatePickerStrings {\r\n    /**\r\n     * An array of strings for the full names of months.\r\n     * The array is 0-based, so months[0] should be the full name of January.\r\n     */\r\n    public months: string[] = [\r\n      strings.DatePickerMonthLongJanuary, strings.DatePickerMonthLongFebruary,\r\n      strings.DatePickerMonthLongMarch, strings.DatePickerMonthLongApril,\r\n      strings.DatePickerMonthLongMay, strings.DatePickerMonthLongJune, strings.DatePickerMonthLongJuly,\r\n      strings.DatePickerMonthLongAugust, strings.DatePickerMonthLongSeptember, strings.DatePickerMonthLongOctober,\r\n      strings.DatePickerMonthLongNovember, strings.DatePickerMonthLongDecember\r\n    ];\r\n    /**\r\n     * An array of strings for the short names of months.\r\n     * The array is 0-based, so shortMonths[0] should be the short name of January.\r\n     */\r\n    public shortMonths: string[] = [\r\n      strings.DatePickerMonthShortJanuary, strings.DatePickerMonthShortFebruary,\r\n      strings.DatePickerMonthShortMarch, strings.DatePickerMonthShortApril,\r\n      strings.DatePickerMonthShortMay, strings.DatePickerMonthShortJune, strings.DatePickerMonthShortJuly,\r\n      strings.DatePickerMonthShortAugust, strings.DatePickerMonthShortSeptember, strings.DatePickerMonthShortOctober,\r\n      strings.DatePickerMonthShortNovember, strings.DatePickerMonthShortDecember\r\n    ];\r\n    /**\r\n     * An array of strings for the full names of days of the week.\r\n     * The array is 0-based, so days[0] should be the full name of Sunday.\r\n     */\r\n    public days: string[] = [\r\n      strings.DatePickerDayLongSunday, strings.DatePickerDayLongMonday, strings.DatePickerDayLongTuesday,\r\n      strings.DatePickerDayLongWednesday, strings.DatePickerDayLongThursday, strings.DatePickerDayLongFriday,\r\n      strings.DatePickerDayLongSaturday\r\n    ];\r\n    /**\r\n     * An array of strings for the initials of the days of the week.\r\n     * The array is 0-based, so days[0] should be the initial of Sunday.\r\n     */\r\n    public shortDays: string[] = [\r\n      strings.DatePickerDayShortSunday, strings.DatePickerDayShortMonday, strings.DatePickerDayShortTuesday,\r\n      strings.DatePickerDayShortWednesday, strings.DatePickerDayShortThursday, strings.DatePickerDayShortFriday,\r\n      strings.DatePickerDayShortSaturday\r\n    ];\r\n    /**\r\n     * String to render for button to direct the user to today's date.\r\n     */\r\n    public goToToday: string = \"\";\r\n    /**\r\n     * Error message to render for TextField if isRequired validation fails.\r\n     */\r\n    public isRequiredErrorMessage: string = \"\";\r\n    /**\r\n     * Error message to render for TextField if input date string parsing fails.\r\n     */\r\n    public invalidInputErrorMessage: string = \"\";\r\n}\r\n\r\nexport interface IPropertyFieldDatePickerHostState {\r\n  date?: string;\r\n  errorMessage?: string;\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldDatePicker component\r\n */\r\nexport default class PropertyFieldDatePickerHost extends React.Component<IPropertyFieldDatePickerHostProps, IPropertyFieldDatePickerHostState> {\r\n\r\n  private latestValidateValue: string;\r\n  private async: Async;\r\n  private delayedValidate: (value: string) => void;\r\n\r\n  /**\r\n   * @function\r\n   * Contructor\r\n   */\r\n  constructor(props: IPropertyFieldDatePickerHostProps) {\r\n    super(props);\r\n    //Bind the current object to the external called onSelectDate method\r\n    this.onSelectDate = this.onSelectDate.bind(this);\r\n\r\n    this.state = {\r\n        date: this.props.initialDate,\r\n        errorMessage: ''\r\n      };\r\n\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Function called when the DatePicker Office UI Fabric component selected date changed\r\n   */\r\n  private onSelectDate(date: Date): void {\r\n    var dateAsString: string = '';\r\n    if (this.props.formatDate) {\r\n      dateAsString = this.props.formatDate(date);\r\n    }\r\n    else {\r\n      dateAsString = date.toDateString();\r\n    }\r\n    this.state.date = dateAsString;\r\n    this.setState(this.state);\r\n    this.delayedValidate(dateAsString);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: string): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.initialDate, value);\r\n      return;\r\n    }\r\n\r\n    if (this.latestValidateValue === value)\r\n      return;\r\n    this.latestValidateValue = value;\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || '');\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.initialDate, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.initialDate, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.initialDate, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: string, newValue: string) {\r\n    if (this.props.onPropertyChange && newValue != null) {\r\n      this.props.properties[this.props.targetProperty] = newValue;\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n      if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the control\r\n   */\r\n  public render(): JSX.Element {\r\n    //Defines the DatePicker control labels\r\n    var dateStrings: DatePickerStrings = new DatePickerStrings();\r\n    //Constructs a Date type object from the initalDate string property\r\n    var date: Date;\r\n    if (this.state.date != null && this.state.date != '')\r\n      date = new Date(this.state.date);\r\n    //Renders content\r\n    return (\r\n      <div>\r\n        <DatePicker { ...this.props }  value={date} strings={dateStrings}\r\n          isMonthPickerVisible={false} onSelectDate={this.onSelectDate} allowTextInput={false}\r\n          formatDate={this.props.formatDate}\r\n           />\r\n        { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n              <div style={{paddingBottom: '8px'}}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n              <span>\r\n                <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n              </span>\r\n              </div>\r\n            : ''}\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":"..\\src"}
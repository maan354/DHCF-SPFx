{"version":3,"sources":["PropertyFieldSPFolderPickerHost.tsx"],"names":[],"mappings":"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","file":"PropertyFieldSPFolderPickerHost.js","sourcesContent":["/**\r\n * @file PropertyFieldSPFolderPickerHost.tsx\r\n * Renders the controls for PropertyFieldSPFolderPicker component\r\n *\r\n * @copyright 2016 Olivier Carpentier\r\n * Released under MIT licence\r\n */\r\nimport * as React from 'react';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport { IWebPartContext } from '@microsoft/sp-webpart-base';\r\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\r\nimport { IPropertyFieldSPFolderPickerPropsInternal } from './PropertyFieldSPFolderPicker';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { IconButton, DefaultButton, PrimaryButton, CommandButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { Spinner, SpinnerType } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nimport * as strings from 'sp-client-custom-fields/strings';\r\n\r\n/**\r\n * @interface\r\n * PropertyFieldSPFolderPickerHost properties interface\r\n *\r\n */\r\nexport interface IPropertyFieldSPFolderPickerHostProps extends IPropertyFieldSPFolderPickerPropsInternal {\r\n}\r\n\r\n/**\r\n * @interface\r\n * Interface to define the state of the rendering control\r\n *\r\n */\r\nexport interface IPropertyFieldSPFolderPickerHostState {\r\n  isOpen: boolean;\r\n  loading: boolean;\r\n  currentSPFolder?: string;\r\n  childrenFolders?: ISPFolders;\r\n  selectedFolder?: string;\r\n  confirmFolder?: string;\r\n  errorMessage?: string;\r\n}\r\n\r\n/**\r\n * @class\r\n * Renders the controls for PropertyFieldSPFolderPicker component\r\n */\r\nexport default class PropertyFieldSPFolderPickerHost extends React.Component<IPropertyFieldSPFolderPickerHostProps, IPropertyFieldSPFolderPickerHostState> {\r\n\r\n  private currentPage: number = 0;\r\n  private pageItemCount: number = 6;\r\n\r\n  private latestValidateValue: string;\r\n  private async: Async;\r\n  private delayedValidate: (value: string) => void;\r\n\r\n  /**\r\n   * @function\r\n   * Constructor\r\n   */\r\n  constructor(props: IPropertyFieldSPFolderPickerHostProps) {\r\n    super(props);\r\n    //Bind the current object to the external called methods\r\n    this.onBrowseClick = this.onBrowseClick.bind(this);\r\n    this.onDismiss = this.onDismiss.bind(this);\r\n    this.onRenderCell = this.onRenderCell.bind(this);\r\n    this.onClickNext = this.onClickNext.bind(this);\r\n    this.onClickPrevious = this.onClickPrevious.bind(this);\r\n    this.onClickLink = this.onClickLink.bind(this);\r\n    this.onClickParent = this.onClickParent.bind(this);\r\n    this.onFolderChecked = this.onFolderChecked.bind(this);\r\n    this.onClickSelect = this.onClickSelect.bind(this);\r\n    this.onClearSelectionClick = this.onClearSelectionClick.bind(this);\r\n\r\n    //Inits the intial folders\r\n    var initialFolder: string;\r\n    var currentSPFolder: string = '';\r\n    if (props.baseFolder != null)\r\n      currentSPFolder = props.baseFolder;\r\n    if (props.initialFolder != null && props.initialFolder != '') {\r\n      initialFolder = props.initialFolder;\r\n      currentSPFolder = this.getParentFolder(initialFolder);\r\n    }\r\n    //Inits the state\r\n    this.state = {\r\n      isOpen: false,\r\n      loading: true,\r\n      currentSPFolder: currentSPFolder,\r\n      confirmFolder: initialFolder,\r\n      selectedFolder: initialFolder,\r\n      childrenFolders: { value: [] },\r\n      errorMessage: ''\r\n    };\r\n\r\n    this.async = new Async(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\r\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Function called when the user wants to browse folders\r\n   */\r\n  private onBrowseClick(): void {\r\n    this.currentPage = 0;\r\n    this.LoadChildrenFolders();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Function called when the user erase the current selection\r\n   */\r\n  private onClearSelectionClick(): void {\r\n    this.state.confirmFolder = '';\r\n    this.state.currentSPFolder = '';\r\n    if (this.props.baseFolder != null)\r\n      this.state.currentSPFolder = this.props.baseFolder;\r\n    this.currentPage = 0;\r\n    this.setState({ isOpen: false, loading: true, selectedFolder: this.state.selectedFolder, currentSPFolder: this.state.currentSPFolder, childrenFolders: this.state.childrenFolders });\r\n    this.delayedValidate(this.state.confirmFolder);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Loads the sub folders from the current\r\n   */\r\n  private LoadChildrenFolders(): void {\r\n    //Loading\r\n    this.state.childrenFolders = { value: [] };\r\n    this.setState({ isOpen: true, loading: true, selectedFolder: this.state.selectedFolder, currentSPFolder: this.state.currentSPFolder, childrenFolders: this.state.childrenFolders });\r\n    //Inits the service\r\n    var folderService: SPFolderPickerService = new SPFolderPickerService(this.props.context);\r\n    folderService.getFolders(this.state.currentSPFolder, this.currentPage, this.pageItemCount).then((response: ISPFolders) => {\r\n      //Binds the results\r\n      this.state.childrenFolders = response;\r\n      this.setState({ isOpen: true, loading: false, selectedFolder: this.state.selectedFolder, currentSPFolder: this.state.currentSPFolder, childrenFolders: this.state.childrenFolders });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * User clicks on the previous button\r\n   */\r\n   private onClickPrevious(): void {\r\n     this.currentPage = this.currentPage - 1;\r\n     this.state.selectedFolder = '';\r\n     if (this.currentPage < 0)\r\n      this.currentPage = 0;\r\n     this.LoadChildrenFolders();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * User clicks on the next button\r\n   */\r\n  private onClickNext(): void {\r\n    this.state.selectedFolder = '';\r\n    this.currentPage = this.currentPage + 1;\r\n    this.LoadChildrenFolders();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * User clicks on a sub folder\r\n   */\r\n  private onClickLink(element?: any): void {\r\n    this.currentPage = 0;\r\n    this.state.selectedFolder = '';\r\n    this.state.currentSPFolder = element.currentTarget.value;\r\n    this.LoadChildrenFolders();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * User clicks on the go-to parent button\r\n   */\r\n  private onClickParent(): void {\r\n    var parentFolder: string = this.getParentFolder(this.state.currentSPFolder);\r\n    if (parentFolder == this.props.context.pageContext.web.serverRelativeUrl)\r\n      parentFolder = '';\r\n    this.currentPage = 0;\r\n    this.state.selectedFolder = '';\r\n    this.state.currentSPFolder = parentFolder;\r\n    this.LoadChildrenFolders();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the parent folder server relative url from a folder url\r\n   */\r\n  private getParentFolder(folderUrl: string): string {\r\n    var splitted = folderUrl.split('/');\r\n    var parentFolder: string = '';\r\n    for (var i = 0; i < splitted.length -1; i++) {\r\n      var node: string = splitted[i];\r\n      if (node != null && node != '') {\r\n        parentFolder += '/';\r\n        parentFolder += splitted[i];\r\n      }\r\n    }\r\n    return parentFolder;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Occurs when the selected folder changed\r\n   */\r\n  private onFolderChecked(element?: any): void {\r\n    this.state.selectedFolder = element.currentTarget.value;\r\n    this.setState({ isOpen: true, loading: false, selectedFolder: this.state.selectedFolder, currentSPFolder: this.state.currentSPFolder, childrenFolders: this.state.childrenFolders });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * User clicks on Select button\r\n   */\r\n  private onClickSelect(): void {\r\n    this.state.confirmFolder = this.state.selectedFolder;\r\n    this.state = { isOpen: false, loading: false, selectedFolder: this.state.selectedFolder,\r\n      confirmFolder: this.state.selectedFolder,\r\n      currentSPFolder: this.state.currentSPFolder,\r\n      childrenFolders: this.state.childrenFolders };\r\n    this.setState(this.state);\r\n    this.delayedValidate(this.state.confirmFolder);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Validates the new custom field value\r\n   */\r\n  private validate(value: string): void {\r\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\r\n      this.notifyAfterValidate(this.props.initialFolder, value);\r\n      return;\r\n    }\r\n\r\n    if (this.latestValidateValue === value)\r\n      return;\r\n    this.latestValidateValue = value;\r\n\r\n    var result: string | PromiseLike<string> = this.props.onGetErrorMessage(value || '');\r\n    if (result !== undefined) {\r\n      if (typeof result === 'string') {\r\n        if (result === undefined || result === '')\r\n          this.notifyAfterValidate(this.props.initialFolder, value);\r\n        this.state.errorMessage = result;\r\n        this.setState(this.state);\r\n      }\r\n      else {\r\n        result.then((errorMessage: string) => {\r\n          if (errorMessage === undefined || errorMessage === '')\r\n            this.notifyAfterValidate(this.props.initialFolder, value);\r\n          this.state.errorMessage = errorMessage;\r\n          this.setState(this.state);\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.notifyAfterValidate(this.props.initialFolder, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Notifies the parent Web Part of a property value change\r\n   */\r\n  private notifyAfterValidate(oldValue: string, newValue: string) {\r\n    if (this.props.onPropertyChange && newValue != null) {\r\n      this.props.properties[this.props.targetProperty] = newValue;\r\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\r\n      if (!this.props.disableReactivePropertyChanges && this.props.render != null)\r\n        this.props.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Called when the component will unmount\r\n   */\r\n  public componentWillUnmount() {\r\n    this.async.dispose();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * User close the dialog wihout saving\r\n   */\r\n  private onDismiss(ev?: React.MouseEvent<any>): any {\r\n    this.setState({ isOpen: false, loading: false, selectedFolder: this.state.selectedFolder, currentSPFolder: this.state.currentSPFolder, childrenFolders: this.state.childrenFolders });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders the controls\r\n   */\r\n  public render(): JSX.Element {\r\n\r\n    var currentFolderisRoot: boolean = false;\r\n    if (this.state.currentSPFolder == null || this.state.currentSPFolder == '' || this.state.currentSPFolder == this.props.baseFolder)\r\n      currentFolderisRoot = true;\r\n\r\n    //Renders content\r\n    return (\r\n      <div>\r\n        <Label>{this.props.label}</Label>\r\n         <table style={{width: '100%', borderSpacing: 0}}>\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"*\">\r\n                <TextField\r\n                  disabled={this.props.disabled}\r\n                  style={{width:'100%'}}\r\n                  readOnly={true}\r\n                  value={this.state.confirmFolder} />\r\n              </td>\r\n              <td width=\"64\">\r\n                <table style={{width: '100%', borderSpacing: 0}}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td><IconButton disabled={this.props.disabled} iconProps={ { iconName: 'FolderSearch' } } onClick={this.onBrowseClick} /></td>\r\n                      <td><IconButton disabled={this.props.disabled} iconProps={ { iconName: 'Delete' } } onClick={this.onClearSelectionClick} /></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        { this.state.errorMessage != null && this.state.errorMessage != '' && this.state.errorMessage != undefined ?\r\n              <div style={{paddingBottom: '8px'}}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{  this.state.errorMessage }</div>\r\n              <span>\r\n                <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{ this.state.errorMessage }</p>\r\n              </span>\r\n              </div>\r\n            : ''}\r\n\r\n        <Dialog type={DialogType.close} title={strings.SPFolderPickerDialogTitle} isOpen={this.state.isOpen} isDarkOverlay={true} isBlocking={false} onDismiss={this.onDismiss}>\r\n\r\n            <div style={{ height: '330px'}}>\r\n                { this.state.loading ? <div><Spinner type={ SpinnerType.normal } /></div> : null }\r\n\r\n                { this.state.loading === false && currentFolderisRoot === false ? <IconButton onClick={this.onClickParent} iconProps={ { iconName: 'Reply' } }>...</IconButton> : null }\r\n\r\n                <List items={this.state.childrenFolders.value}  onRenderCell={this.onRenderCell} />\r\n                { this.state.loading === false ?\r\n                <IconButton iconProps={ { iconName: 'CaretLeft8' } } onClick={this.onClickPrevious}\r\n                  disabled={ this.currentPage > 0 ? false : true }\r\n                  />\r\n                : null }\r\n                { this.state.loading === false ?\r\n                <IconButton iconProps={ { iconName: 'CaretRight8' } } onClick={this.onClickNext}\r\n                  disabled={ this.state.childrenFolders.value.length < this.pageItemCount ? true : false }\r\n                   />\r\n                : null }\r\n            </div>\r\n\r\n            <div style={{marginTop: '20px'}}>\r\n\r\n              <PrimaryButton disabled={this.state.selectedFolder != null && this.state.selectedFolder != '' ? false : true }\r\n                onClick={this.onClickSelect}>{strings.SPFolderPickerSelectButton}</PrimaryButton>\r\n              <DefaultButton onClick={this.onDismiss}>{strings.SPFolderPickerCancelButton}</DefaultButton>\r\n            </div>\r\n\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders a list cell\r\n   */\r\n  private onRenderCell(item?: any, index?: number): React.ReactNode {\r\n    var idUnique: string = 'radio-' + item.ServerRelativeUrl;\r\n    return (\r\n      <div style={{fontSize: '14px', padding: '4px'}}>\r\n        <div className=\"ms-ChoiceField\">\r\n          <input id={idUnique} style={{width: '18px', height: '18px'}}\r\n            defaultChecked={item.ServerRelativeUrl === this.state.confirmFolder ? true: false}\r\n            aria-checked={item.ServerRelativeUrl === this.state.confirmFolder ? true: false}\r\n            onChange={this.onFolderChecked} type=\"radio\" name=\"radio1\" value={item.ServerRelativeUrl}/>\r\n          <label htmlFor={idUnique} >\r\n            <span className=\"ms-Label\">\r\n              <i className=\"ms-Icon ms-Icon--FolderFill\" style={{color: '#0062AF', fontSize: '22px'}}></i>\r\n              <span style={{paddingLeft: '5px'}}>\r\n                <CommandButton style={{paddingBottom: '0', height: '27px'}} value={item.ServerRelativeUrl} onClick={this.onClickLink}>\r\n                  <span className=\"ms-Button-label\">\r\n                    {item.Name}\r\n                  </span>\r\n                </CommandButton>\r\n              </span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @interface\r\n * Defines a collection of SharePoint folders\r\n */\r\nexport interface ISPFolders {\r\n  value: ISPFolder[];\r\n}\r\n\r\n/**\r\n * @interface\r\n * Defines a SharePoint folder\r\n */\r\nexport interface ISPFolder {\r\n  Name: string;\r\n  ServerRelativeUrl: string;\r\n}\r\n\r\n/**\r\n * @class\r\n * Service implementation to get folders from current SharePoint site\r\n */\r\nclass SPFolderPickerService {\r\n\r\n  private context: IWebPartContext;\r\n\r\n  /**\r\n   * @function\r\n   * Service constructor\r\n   */\r\n  constructor(pageContext: IWebPartContext){\r\n      this.context = pageContext;\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets the collection of sub folders of the given folder\r\n   */\r\n  public getFolders(parentFolderServerRelativeUrl?: string, currentPage?: number, pageItemCount?: number): Promise<ISPFolders> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      //If the running environment is local, load the data from the mock\r\n      return this.getFoldersMock(parentFolderServerRelativeUrl);\r\n    }\r\n    else {\r\n      //If the running environment is SharePoint, request the folders REST service\r\n      var queryUrl: string = this.context.pageContext.web.absoluteUrl;\r\n      var skipNumber = currentPage * pageItemCount;\r\n      if (parentFolderServerRelativeUrl == null || parentFolderServerRelativeUrl == '' || parentFolderServerRelativeUrl == '/') {\r\n        //The folder is the web root site\r\n        queryUrl += \"/_api/web/folders?$select=Name,ServerRelativeUrl&$orderBy=Name&$top=\";\r\n        queryUrl += pageItemCount;\r\n        queryUrl += \"&$skip=\";\r\n        queryUrl += skipNumber;\r\n      }\r\n      else {\r\n        //Loads sub folders\r\n        queryUrl += \"/_api/web/GetFolderByServerRelativeUrl('\";\r\n        queryUrl += parentFolderServerRelativeUrl;\r\n        queryUrl += \"')/folders?$select=Name,ServerRelativeUrl&$orderBy=Name&$top=\";\r\n        queryUrl += pageItemCount;\r\n        queryUrl += \"&$skip=\";\r\n        queryUrl += skipNumber;\r\n      }\r\n      return this.context.spHttpClient.get(queryUrl, SPHttpClient.configurations.v1).then((response: SPHttpClientResponse) => {\r\n          return response.json();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Returns 3 fake SharePoint folders for the Mock mode\r\n   */\r\n  private getFoldersMock(parentFolderServerRelativeUrl?: string): Promise<ISPFolders> {\r\n    return SPFolderPickerMockHttpClient.getFolders(this.context.pageContext.web.absoluteUrl).then(() => {\r\n          const listData: ISPFolders = {\r\n              value:\r\n              [\r\n                  { Name: 'Mock Folder One', ServerRelativeUrl: '/mockfolderone' },\r\n                  { Name: 'Mock Folder Two', ServerRelativeUrl: '/mockfoldertwo' },\r\n                  { Name: 'Mock Folder Three', ServerRelativeUrl: '/mockfolderthree' }\r\n              ]\r\n          };\r\n          return listData;\r\n      }) as Promise<ISPFolders>;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @class\r\n * Defines a http client to request mock data to use the web part with the local workbench\r\n */\r\nclass SPFolderPickerMockHttpClient {\r\n\r\n    /**\r\n     * @var\r\n     * Mock SharePoint result sample\r\n     */\r\n    private static _results: ISPFolders = { value: []};\r\n\r\n    /**\r\n     * @function\r\n     * Mock get folders method\r\n     */\r\n    public static getFolders(restUrl: string, options?: any): Promise<ISPFolders> {\r\n      return new Promise<ISPFolders>((resolve) => {\r\n            resolve(SPFolderPickerMockHttpClient._results);\r\n        });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"..\\src"}